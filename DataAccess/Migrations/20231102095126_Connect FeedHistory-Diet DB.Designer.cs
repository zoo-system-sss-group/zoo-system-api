// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20231102095126_Connect FeedHistory-Diet DB")]
    partial class ConnectFeedHistoryDietDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Experiences")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 475, DateTimeKind.Local).AddTicks(4143),
                            Fullname = "Lion Tamer",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 475, DateTimeKind.Local).AddTicks(4158),
                            Password = "kK/bveedKbrJs3Hml2bmFM1LUD5RzrB1tn6aONTER6CBjPHO",
                            Role = 1,
                            Username = "LionTamer"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 479, DateTimeKind.Local).AddTicks(3312),
                            Fullname = "Pachyderm Pro",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 479, DateTimeKind.Local).AddTicks(3325),
                            Password = "mTGMRWTNJkL2RDOTAKYmSljdr0aIVc7r/adEOlyPuFwwfB1Z",
                            Role = 1,
                            Username = "PachydermPro"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 483, DateTimeKind.Local).AddTicks(1369),
                            Fullname = "Shark Whisperer",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 483, DateTimeKind.Local).AddTicks(1371),
                            Password = "N1myHZyC4uj/B3zSCfFfUmmitaxFCCzthuI84uHP/EQBpSNr",
                            Role = 1,
                            Username = "SharkWhisperer"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 486, DateTimeKind.Local).AddTicks(9383),
                            Fullname = "Fox Friend",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 486, DateTimeKind.Local).AddTicks(9384),
                            Password = "unbznzIO1tz82f8kzoI8kyzqBmfcewwA9FNqJZwRsCOZGoF/",
                            Role = 1,
                            Username = "FoxFriend"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 490, DateTimeKind.Local).AddTicks(9756),
                            Fullname = "Penguin Pal",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 490, DateTimeKind.Local).AddTicks(9768),
                            Password = "4ULiUqZ0MPsLWvWnC3QXD1DQwxXCIkRbbQtovJ/uCI6IDFYR",
                            Role = 1,
                            Username = "PenguinPal"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 494, DateTimeKind.Local).AddTicks(8933),
                            Fullname = "Nhân viên sở thú",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 494, DateTimeKind.Local).AddTicks(8944),
                            Password = "xcXq9AgHqIhRsnZ90/rnBoHmjMclSAwe58xFT08Knlqe17rr",
                            Role = 0,
                            Username = "staff"
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 498, DateTimeKind.Local).AddTicks(7453),
                            Fullname = "Quản trị viên",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 498, DateTimeKind.Local).AddTicks(7455),
                            Password = "LE0NaCGIDDpI5NQZM+QbfF6vAyODJWUG8BspSfkp4d/HTR/F",
                            Role = 2,
                            Username = "admin"
                        });
                });

            modelBuilder.Entity("Domain.Entities.AnimalInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Height")
                        .HasColumnType("float");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("SpeciesId");

                    b.ToTable("AnimalInformations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2018, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4728),
                            Description = "Majestic African lion named Simba.",
                            Image = "https://i.pinimg.com/564x/db/40/00/db40008ec6c5e2d789834f67359eee44.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4744),
                            Name = "Simba",
                            SpeciesId = 1,
                            Status = 1,
                            Weight = 180.0
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2015, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4882),
                            Description = "Gentle Asian elephant named Dumbo.",
                            Height = 10.0,
                            Image = "https://i.pinimg.com/564x/1c/d5/9d/1cd59d96db28e0cbf5e88270bac8fb34.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4883),
                            Name = "Dumbo",
                            SpeciesId = 2,
                            Status = 1,
                            Weight = 4500.0
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(2017, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4893),
                            Description = "Fearsome great white shark named Jaws.",
                            Image = "https://i.pinimg.com/564x/fb/b9/fb/fbb9fb9a5f8f9f2d4244ad7c2bb1b6fe.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4894),
                            Name = "Jaws",
                            SpeciesId = 3,
                            Status = 1,
                            Weight = 2000.0
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(2020, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4903),
                            Description = "Cunning European red fox named Foxy.",
                            Image = "https://i.pinimg.com/564x/9c/ee/58/9cee58f97470496aa9b99ac613125a5c.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4904),
                            Name = "Foxy",
                            SpeciesId = 4,
                            Status = 1,
                            Weight = 10.0
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(2019, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4913),
                            Description = "Regal emperor penguin named Emmy.",
                            Image = "https://i.pinimg.com/564x/ae/3c/24/ae3c24f7dbd9e9ba721a3b76fec1c32b.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4914),
                            Name = "Emmy",
                            SpeciesId = 5,
                            Status = 1,
                            Weight = 35.0
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(2017, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4920),
                            Description = "Energetic kangaroo named Kang.",
                            Image = "https://i.pinimg.com/564x/5a/4c/15/5a4c15238fce3e4e1c5405965c1a7237.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4921),
                            Name = "Kang",
                            SpeciesId = 6,
                            Status = 1,
                            Weight = 70.0
                        },
                        new
                        {
                            Id = 7,
                            BirthDate = new DateTime(2016, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4928),
                            Description = "Majestic grizzly bear named Bear.",
                            Height = 5.0,
                            Image = "https://i.pinimg.com/564x/7a/51/b9/7a51b95ffc4d7cbac381c30cc5fbe077.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4929),
                            Name = "Bear",
                            SpeciesId = 7,
                            Status = 1,
                            Weight = 800.0
                        },
                        new
                        {
                            Id = 8,
                            BirthDate = new DateTime(2015, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4939),
                            Description = "Proud polar bear named Nanook.",
                            Height = 4.5,
                            Image = "https://i.pinimg.com/564x/0c/6c/eb/0c6ceb9b063baff86c11b7e1f696bf04.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4940),
                            Name = "Nanook",
                            SpeciesId = 8,
                            Status = 1,
                            Weight = 900.0
                        },
                        new
                        {
                            Id = 9,
                            BirthDate = new DateTime(2016, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4946),
                            Description = "Fierce Bengal tiger named Raja.",
                            Height = 3.0,
                            Image = "https://i.pinimg.com/564x/52/91/cf/5291cf756d15a62f4b8b717e154ca37e.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4947),
                            Name = "Raja",
                            SpeciesId = 9,
                            Status = 1,
                            Weight = 200.0
                        },
                        new
                        {
                            Id = 10,
                            BirthDate = new DateTime(2017, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4952),
                            Description = "Adorable panda named Pandy.",
                            Height = 2.0,
                            Image = "https://i.pinimg.com/564x/99/bf/a4/99bfa449a463241b88739980663738d0.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4953),
                            Name = "Pandy",
                            SpeciesId = 10,
                            Status = 1,
                            Weight = 150.0
                        },
                        new
                        {
                            Id = 11,
                            BirthDate = new DateTime(2019, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4959),
                            Description = "Graceful African lioness named Zara.",
                            Image = "https://i.pinimg.com/564x/4e/26/37/4e26371ca9dfefc559fff95d041d911b.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4960),
                            Name = "Zara",
                            SpeciesId = 1,
                            Status = 1,
                            Weight = 150.0
                        },
                        new
                        {
                            Id = 12,
                            BirthDate = new DateTime(2016, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4965),
                            Description = "Gentle Asian elephant named Babar.",
                            Height = 9.5,
                            Image = "https://i.pinimg.com/564x/77/f9/6c/77f96c07e4682b864bd8c1815da37aa7.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4966),
                            Name = "Babar",
                            SpeciesId = 2,
                            Status = 1,
                            Weight = 4000.0
                        },
                        new
                        {
                            Id = 13,
                            BirthDate = new DateTime(2018, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4972),
                            Description = "Majestic great white shark named Fins.",
                            Image = "https://i.pinimg.com/564x/bb/81/9e/bb819e828e69a7b74d0efec858df28ff.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4972),
                            Name = "Fins",
                            SpeciesId = 3,
                            Status = 1,
                            Weight = 1800.0
                        },
                        new
                        {
                            Id = 14,
                            BirthDate = new DateTime(2021, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4978),
                            Description = "Clever European red fox named Sly.",
                            Image = "https://i.pinimg.com/564x/a1/af/f6/a1aff62d5b61c8ff2d9fd1128f4ae8c7.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4978),
                            Name = "Sly",
                            SpeciesId = 4,
                            Status = 1,
                            Weight = 12.0
                        },
                        new
                        {
                            Id = 15,
                            BirthDate = new DateTime(2020, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4984),
                            Description = "Charming emperor penguin named Waddle.",
                            Image = "https://i.pinimg.com/564x/5b/a3/b2/5ba3b2ac8ca269f8c111255b03ee2224.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4985),
                            Name = "Waddle",
                            SpeciesId = 5,
                            Status = 1,
                            Weight = 30.0
                        },
                        new
                        {
                            Id = 16,
                            BirthDate = new DateTime(2017, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4990),
                            Description = "Energetic kangaroo named Joey.",
                            Image = "https://i.pinimg.com/736x/cb/86/34/cb8634141686341ac17d6a99b0ec4d5d.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4991),
                            Name = "Joey",
                            SpeciesId = 6,
                            Status = 1,
                            Weight = 75.0
                        },
                        new
                        {
                            Id = 17,
                            BirthDate = new DateTime(2022, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4997),
                            Description = "Playful grizzly bear cub named Bearly.",
                            Height = 2.5,
                            Image = "https://i.pinimg.com/564x/25/10/b7/2510b768ba2867870004f6a05f3a8484.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(4998),
                            Name = "Bearly",
                            SpeciesId = 7,
                            Status = 1,
                            Weight = 150.0
                        },
                        new
                        {
                            Id = 18,
                            BirthDate = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(5003),
                            Description = "Young polar bear named Snowy.",
                            Height = 3.0,
                            Image = "https://i.pinimg.com/564x/05/b5/41/05b541cd74e53a88bc086a841727cf92.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(5004),
                            Name = "Snowy",
                            SpeciesId = 8,
                            Status = 1,
                            Weight = 300.0
                        },
                        new
                        {
                            Id = 19,
                            BirthDate = new DateTime(2022, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(5010),
                            Description = "Adventurous Bengal tiger cub named Tyga.",
                            Height = 2.0,
                            Image = "https://i.pinimg.com/564x/ea/b4/67/eab467dd41563c6658fec4a730f78e90.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(5011),
                            Name = "Tyga",
                            SpeciesId = 9,
                            Status = 1,
                            Weight = 50.0
                        },
                        new
                        {
                            Id = 20,
                            BirthDate = new DateTime(2019, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(5016),
                            Description = "Bamboo-loving panda named Bamboo.",
                            Height = 1.5,
                            Image = "https://i.pinimg.com/564x/86/e0/33/86e03347fd80983cc6a19bfe75d49620.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 503, DateTimeKind.Local).AddTicks(5017),
                            Name = "Bamboo",
                            SpeciesId = 10,
                            Status = 1,
                            Weight = 120.0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Areas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 100,
                            Code = "A",
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(1797),
                            Description = "An exhibit featuring animals from the African savanna",
                            IsDeleted = false,
                            Location = "Savanna Exhibit",
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(1810),
                            Name = "African Savanna"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 80,
                            Code = "B",
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(1812),
                            Description = "A lush and diverse rainforest habitat",
                            IsDeleted = false,
                            Location = "Rainforest Pavilion",
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(1813),
                            Name = "Rainforest"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 50,
                            Code = "C",
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(1814),
                            Description = "A cold and watery habitat for penguins",
                            IsDeleted = false,
                            Location = "Aquatic Pavilion",
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(1815),
                            Name = "Penguin Cove"
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 60,
                            Code = "D",
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(1817),
                            Description = "A hot and arid desert environment",
                            IsDeleted = false,
                            Location = "Desert Exhibit",
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(1817),
                            Name = "Desert Oasis"
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 70,
                            Code = "E",
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(1819),
                            Description = "A vibrant coral reef with colorful fish",
                            IsDeleted = false,
                            Location = "Aquatic Pavilion",
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(1819),
                            Name = "Tropical Reef"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Cage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Cages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AreaId = 1,
                            Capacity = 10,
                            Code = "A0001",
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(5152),
                            Description = "A spacious exhibit featuring African animals.",
                            IsDeleted = false,
                            Location = "Savannah Exhibit",
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(5163),
                            Name = "African Safari"
                        },
                        new
                        {
                            Id = 2,
                            AreaId = 1,
                            Capacity = 15,
                            Code = "A0002",
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(5166),
                            Description = "A dedicated area for Asian elephants.",
                            IsDeleted = false,
                            Location = "Asian Elephant Pavilion",
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(5167),
                            Name = "Elephant Sanctuary"
                        },
                        new
                        {
                            Id = 3,
                            AreaId = 2,
                            Capacity = 12,
                            Code = "B0003",
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(5168),
                            Description = "A large tank showcasing great white sharks.",
                            IsDeleted = false,
                            Location = "Marine World",
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(5169),
                            Name = "Shark Tank"
                        },
                        new
                        {
                            Id = 4,
                            AreaId = 2,
                            Capacity = 20,
                            Code = "B0004",
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(5172),
                            Description = "A natural habitat for grizzly bears.",
                            IsDeleted = false,
                            Location = "North American Habitat",
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(5172),
                            Name = "Grizzly Wilderness"
                        },
                        new
                        {
                            Id = 5,
                            AreaId = 3,
                            Capacity = 8,
                            Code = "C0005",
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(5175),
                            Description = "A chilly paradise for emperor penguins.",
                            IsDeleted = false,
                            Location = "Antarctic Exhibit",
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(5175),
                            Name = "Penguin Paradise"
                        },
                        new
                        {
                            Id = 6,
                            AreaId = 1,
                            Capacity = 20,
                            Code = "A0006",
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(5177),
                            Description = "A vast exhibit showcasing African wildlife.",
                            IsDeleted = false,
                            Location = "Wide Open Savannah",
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(5177),
                            Name = "African Plains"
                        },
                        new
                        {
                            Id = 7,
                            AreaId = 2,
                            Capacity = 18,
                            Code = "B0007",
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(5179),
                            Description = "A chilly environment for polar animals.",
                            IsDeleted = false,
                            Location = "Arctic Enclosure",
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(5180),
                            Name = "Polar Icecaps"
                        },
                        new
                        {
                            Id = 8,
                            AreaId = 3,
                            Capacity = 12,
                            Code = "C0008",
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(5181),
                            Description = "An arid landscape for Australian fauna.",
                            IsDeleted = false,
                            Location = "Australian Habitat",
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(5182),
                            Name = "Aussie Outback"
                        },
                        new
                        {
                            Id = 9,
                            AreaId = 4,
                            Capacity = 15,
                            Code = "D0009",
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(5184),
                            Description = "A dense forest for Siberian wildlife.",
                            IsDeleted = false,
                            Location = "Russian Wilderness",
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(5184),
                            Name = "Siberian Taiga"
                        },
                        new
                        {
                            Id = 10,
                            AreaId = 5,
                            Capacity = 25,
                            Code = "E0010",
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(5186),
                            Description = "A lush jungle exhibit for Amazon species.",
                            IsDeleted = false,
                            Location = "South American Jungle",
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 504, DateTimeKind.Local).AddTicks(5187),
                            Name = "Amazon Rainforest"
                        });
                });

            modelBuilder.Entity("Domain.Entities.CageHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<int>("CageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("CageId");

                    b.ToTable("CageHistories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnimalId = 1,
                            CageId = 1,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(518),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(518),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(508)
                        },
                        new
                        {
                            Id = 2,
                            AnimalId = 2,
                            CageId = 2,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(520),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(521),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(520)
                        },
                        new
                        {
                            Id = 3,
                            AnimalId = 3,
                            CageId = 3,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(522),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(523),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(522)
                        },
                        new
                        {
                            Id = 4,
                            AnimalId = 4,
                            CageId = 4,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(525),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(525),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(524)
                        },
                        new
                        {
                            Id = 5,
                            AnimalId = 5,
                            CageId = 5,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(527),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(527),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(526)
                        },
                        new
                        {
                            Id = 6,
                            AnimalId = 6,
                            CageId = 6,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(529),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(530),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(529)
                        },
                        new
                        {
                            Id = 7,
                            AnimalId = 7,
                            CageId = 7,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(531),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(532),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(531)
                        },
                        new
                        {
                            Id = 8,
                            AnimalId = 8,
                            CageId = 8,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(533),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(534),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(533)
                        },
                        new
                        {
                            Id = 9,
                            AnimalId = 9,
                            CageId = 9,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(536),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(536),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(535)
                        },
                        new
                        {
                            Id = 10,
                            AnimalId = 10,
                            CageId = 10,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(538),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(538),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(537)
                        },
                        new
                        {
                            Id = 11,
                            AnimalId = 11,
                            CageId = 1,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(540),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(540),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(539)
                        },
                        new
                        {
                            Id = 12,
                            AnimalId = 12,
                            CageId = 2,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(542),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(543),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(541)
                        },
                        new
                        {
                            Id = 13,
                            AnimalId = 13,
                            CageId = 3,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(544),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(545),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(544)
                        },
                        new
                        {
                            Id = 14,
                            AnimalId = 14,
                            CageId = 4,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(546),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(547),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(546)
                        },
                        new
                        {
                            Id = 15,
                            AnimalId = 15,
                            CageId = 5,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(548),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(549),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(548)
                        },
                        new
                        {
                            Id = 16,
                            AnimalId = 16,
                            CageId = 6,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(551),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(551),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(550)
                        },
                        new
                        {
                            Id = 17,
                            AnimalId = 17,
                            CageId = 7,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(553),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(553),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(552)
                        },
                        new
                        {
                            Id = 18,
                            AnimalId = 18,
                            CageId = 8,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(555),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(555),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(554)
                        },
                        new
                        {
                            Id = 19,
                            AnimalId = 19,
                            CageId = 9,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(557),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(558),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(557)
                        },
                        new
                        {
                            Id = 20,
                            AnimalId = 20,
                            CageId = 10,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(559),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(560),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(559)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Diet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DietName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("TimesPerDay")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Diets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5068),
                            DietName = "African Lion - Birth Diet",
                            FoodName = "Milk",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5075),
                            Quantity = 0.5,
                            TimesPerDay = 8,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5079),
                            DietName = "African Lion - Mature Diet",
                            FoodName = "Meat and vegetables",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5079),
                            Quantity = 2.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5081),
                            DietName = "African Lion - Pregnant Diet",
                            FoodName = "Special pregnancy diet",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5081),
                            Quantity = 2.5,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5083),
                            DietName = "Asian Elephant - Birth Diet",
                            FoodName = "Milk and Vegetables",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5084),
                            Quantity = 5.0,
                            TimesPerDay = 4,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5085),
                            DietName = "Asian Elephant - Mature Diet",
                            FoodName = "Grasses, Fruits, Vegetables, and Sugarcane",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5086),
                            Quantity = 150.0,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5088),
                            DietName = "Asian Elephant - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Fruits, Vegetables, and Sugarcane)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5088),
                            Quantity = 150.0,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5090),
                            DietName = "Great White Shark - Birth Diet",
                            FoodName = "Fish and other small sea creatures",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5090),
                            Quantity = 10.0,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5092),
                            DietName = "Great White Shark - Mature Diet",
                            FoodName = "Seals, sea lions, fish, and other sharks",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5093),
                            Quantity = 30.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5133),
                            DietName = "Great White Shark - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Fish and Sea Creatures)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5133),
                            Quantity = 40.0,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 10,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5135),
                            DietName = "European Red Fox - Birth Diet",
                            FoodName = "Milk and Small Creatures",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5136),
                            Quantity = 0.5,
                            TimesPerDay = 4,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 11,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5137),
                            DietName = "European Red Fox - Mature Diet",
                            FoodName = "Small mammals, birds, fruits, and insects",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5138),
                            Quantity = 2.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 12,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5140),
                            DietName = "European Red Fox - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Small Creatures and Fruits)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5140),
                            Quantity = 2.5,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 13,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5142),
                            DietName = "Emperor Penguin - Birth Diet",
                            FoodName = "Milk and Fish",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5142),
                            Quantity = 0.5,
                            TimesPerDay = 8,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 14,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5144),
                            DietName = "Emperor Penguin - Mature Diet",
                            FoodName = "Fish, squid, and krill",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5145),
                            Quantity = 2.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 15,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5146),
                            DietName = "Emperor Penguin - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Fish and Seafood)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5147),
                            Quantity = 2.5,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 16,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5149),
                            DietName = "Kangaroo - Birth Diet",
                            FoodName = "Milk and Grasses",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5149),
                            Quantity = 0.5,
                            TimesPerDay = 8,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 17,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5151),
                            DietName = "Kangaroo - Mature Diet",
                            FoodName = "Grasses and plants",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5152),
                            Quantity = 2.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 18,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5153),
                            DietName = "Kangaroo - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Grasses and Leaves)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5154),
                            Quantity = 2.5,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 19,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5156),
                            DietName = "Grizzly Bear - Birth Diet",
                            FoodName = "Milk and Berries",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5156),
                            Quantity = 2.0,
                            TimesPerDay = 4,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 20,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5158),
                            DietName = "Grizzly Bear - Mature Diet",
                            FoodName = "Fish, berries, roots, and small mammals",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5158),
                            Quantity = 5.0,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 21,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5160),
                            DietName = "Grizzly Bear - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Berries and Small Creatures)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5161),
                            Quantity = 6.0,
                            TimesPerDay = 4,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 22,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5162),
                            DietName = "Polar Bear - Birth Diet",
                            FoodName = "Milk and Fish",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5163),
                            Quantity = 1.0,
                            TimesPerDay = 6,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 23,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5165),
                            DietName = "Polar Bear - Mature Diet",
                            FoodName = "Seals and fish",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5165),
                            Quantity = 4.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 24,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5167),
                            DietName = "Polar Bear - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Fish and Seafood)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5167),
                            Quantity = 5.0,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 25,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5169),
                            DietName = "Bengal Tiger - Birth Diet",
                            FoodName = "Milk and Meat",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5170),
                            Quantity = 0.5,
                            TimesPerDay = 8,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 26,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5171),
                            DietName = "Bengal Tiger - Mature Diet",
                            FoodName = "Deer, wild boar, and other ungulates",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5172),
                            Quantity = 2.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 27,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5174),
                            DietName = "Bengal Tiger - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Meat and Prey)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5174),
                            Quantity = 2.5,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 28,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5176),
                            DietName = "Panda - Birth Diet",
                            FoodName = "Milk and Bamboo",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5177),
                            Quantity = 0.5,
                            TimesPerDay = 8,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 29,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5178),
                            DietName = "Panda - Mature Diet",
                            FoodName = "Bamboo shoots and leaves",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5179),
                            Quantity = 2.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 30,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5181),
                            DietName = "Panda - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Bamboo and Vegetation)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 505, DateTimeKind.Local).AddTicks(5181),
                            Quantity = 2.5,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        });
                });

            modelBuilder.Entity("Domain.Entities.DietDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DietId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("DietId");

                    b.ToTable("DietDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnimalId = 1,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(203),
                            DietId = 1,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(206),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(207)
                        },
                        new
                        {
                            Id = 2,
                            AnimalId = 2,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(209),
                            DietId = 5,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(209),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(210)
                        },
                        new
                        {
                            Id = 3,
                            AnimalId = 3,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(212),
                            DietId = 7,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(212),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(213)
                        },
                        new
                        {
                            Id = 4,
                            AnimalId = 4,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(215),
                            DietId = 10,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(215),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(216)
                        },
                        new
                        {
                            Id = 5,
                            AnimalId = 5,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(217),
                            DietId = 14,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(218),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(219)
                        },
                        new
                        {
                            Id = 6,
                            AnimalId = 6,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(220),
                            DietId = 16,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(221),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(222)
                        },
                        new
                        {
                            Id = 7,
                            AnimalId = 7,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(223),
                            DietId = 20,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(224),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(225)
                        },
                        new
                        {
                            Id = 8,
                            AnimalId = 8,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(226),
                            DietId = 22,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(227),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(228)
                        },
                        new
                        {
                            Id = 9,
                            AnimalId = 9,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(229),
                            DietId = 26,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(230),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(230)
                        },
                        new
                        {
                            Id = 10,
                            AnimalId = 10,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(232),
                            DietId = 28,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(232),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(233)
                        },
                        new
                        {
                            Id = 11,
                            AnimalId = 11,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(235),
                            DietId = 2,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(235),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(236)
                        },
                        new
                        {
                            Id = 12,
                            AnimalId = 12,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(267),
                            DietId = 6,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(267),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(268)
                        },
                        new
                        {
                            Id = 13,
                            AnimalId = 13,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(270),
                            DietId = 8,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(271),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(272)
                        },
                        new
                        {
                            Id = 14,
                            AnimalId = 14,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(273),
                            DietId = 12,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(274),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(274)
                        },
                        new
                        {
                            Id = 15,
                            AnimalId = 15,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(276),
                            DietId = 15,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(276),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(277)
                        },
                        new
                        {
                            Id = 16,
                            AnimalId = 16,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(279),
                            DietId = 18,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(279),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(280)
                        },
                        new
                        {
                            Id = 17,
                            AnimalId = 17,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(282),
                            DietId = 21,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(282),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(283)
                        },
                        new
                        {
                            Id = 18,
                            AnimalId = 18,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(285),
                            DietId = 24,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(285),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(286)
                        },
                        new
                        {
                            Id = 19,
                            AnimalId = 19,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(287),
                            DietId = 27,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(288),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(289)
                        },
                        new
                        {
                            Id = 20,
                            AnimalId = 20,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(290),
                            DietId = 30,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(291),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 506, DateTimeKind.Local).AddTicks(292)
                        });
                });

            modelBuilder.Entity("Domain.Entities.FeedHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int?>("DietId")
                        .HasColumnType("int");

                    b.Property<DateTime>("FeedingDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("TrainerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("DietId");

                    b.HasIndex("TrainerId");

                    b.ToTable("FeedHistories");
                });

            modelBuilder.Entity("Domain.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("Domain.Entities.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Habitat")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LifeSpan")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScientificName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WildDiet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Species");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 507, DateTimeKind.Local).AddTicks(5070),
                            Description = "The African lion is a large predatory cat native to Africa.",
                            Habitat = 0,
                            IsDeleted = false,
                            LifeSpan = 10,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 507, DateTimeKind.Local).AddTicks(5085),
                            Name = "African Lion",
                            ScientificName = "Panthera leo",
                            WildDiet = "Wild antelopes, zebras, and other herbivores"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 507, DateTimeKind.Local).AddTicks(5089),
                            Description = "The Asian elephant is the largest living land animal in Asia.",
                            Habitat = 1,
                            IsDeleted = false,
                            LifeSpan = 60,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 507, DateTimeKind.Local).AddTicks(5089),
                            Name = "Asian Elephant",
                            ScientificName = "Elephas maximus",
                            WildDiet = "Grasses, bamboo, fruits, and tree bark"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 507, DateTimeKind.Local).AddTicks(5092),
                            Description = "The great white shark is a fearsome predator of the oceans.",
                            Habitat = 2,
                            IsDeleted = false,
                            LifeSpan = 70,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 507, DateTimeKind.Local).AddTicks(5093),
                            Name = "Great White Shark",
                            ScientificName = "Carcharodon carcharias",
                            WildDiet = "Seals, sea lions, fish, and other sharks"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 507, DateTimeKind.Local).AddTicks(5095),
                            Description = "The European red fox is a cunning and adaptable predator.",
                            Habitat = 3,
                            IsDeleted = false,
                            LifeSpan = 5,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 507, DateTimeKind.Local).AddTicks(5095),
                            Name = "European Red Fox",
                            ScientificName = "Vulpes vulpes",
                            WildDiet = "Small mammals, birds, fruits, and insects"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 507, DateTimeKind.Local).AddTicks(5145),
                            Description = "The emperor penguin is the largest penguin species and lives in Antarctica.",
                            Habitat = 4,
                            IsDeleted = false,
                            LifeSpan = 20,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 507, DateTimeKind.Local).AddTicks(5146),
                            Name = "Emperor Penguin",
                            ScientificName = "Aptenodytes forsteri",
                            WildDiet = "Fish, squid, and krill"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 507, DateTimeKind.Local).AddTicks(5148),
                            Description = "Kangaroos are marsupials known for their powerful hind legs and pouches.",
                            Habitat = 5,
                            IsDeleted = false,
                            LifeSpan = 6,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 507, DateTimeKind.Local).AddTicks(5148),
                            Name = "Kangaroo",
                            ScientificName = "Macropus",
                            WildDiet = "Grasses and plants"
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 507, DateTimeKind.Local).AddTicks(5150),
                            Description = "The grizzly bear is a large and formidable North American mammal.",
                            Habitat = 6,
                            IsDeleted = false,
                            LifeSpan = 20,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 507, DateTimeKind.Local).AddTicks(5151),
                            Name = "Grizzly Bear",
                            ScientificName = "Ursus arctos horribilis",
                            WildDiet = "Fish, berries, roots, and small mammals"
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 507, DateTimeKind.Local).AddTicks(5153),
                            Description = "The polar bear is a marine mammal adapted to the Arctic environment.",
                            Habitat = 4,
                            IsDeleted = false,
                            LifeSpan = 25,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 507, DateTimeKind.Local).AddTicks(5153),
                            Name = "Polar Bear",
                            ScientificName = "Ursus maritimus",
                            WildDiet = "Seals and fish"
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 507, DateTimeKind.Local).AddTicks(5158),
                            Description = "The Bengal tiger is a majestic big cat native to the Indian subcontinent.",
                            Habitat = 1,
                            IsDeleted = false,
                            LifeSpan = 15,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 507, DateTimeKind.Local).AddTicks(5158),
                            Name = "Bengal Tiger",
                            ScientificName = "Panthera tigris tigris",
                            WildDiet = "Deer, wild boar, and other ungulates"
                        },
                        new
                        {
                            Id = 10,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 507, DateTimeKind.Local).AddTicks(5160),
                            Description = "The panda is an iconic bear species known for its bamboo diet.",
                            Habitat = 1,
                            IsDeleted = false,
                            LifeSpan = 20,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 507, DateTimeKind.Local).AddTicks(5160),
                            Name = "Panda",
                            ScientificName = "Ailuropoda melanoleuca",
                            WildDiet = "Bamboo shoots and leaves"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("OrderInformationId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("TicketType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("OrderInformationId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Domain.Entities.TicketOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("TotalMoney")
                        .HasColumnType("float");

                    b.Property<int>("TotalTicket")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("TicketOrders");
                });

            modelBuilder.Entity("Domain.Entities.TrainingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("TrainerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("TrainerId");

                    b.ToTable("TrainingDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnimalId = 1,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(814),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(817),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(804),
                            TrainerId = 1
                        },
                        new
                        {
                            Id = 2,
                            AnimalId = 11,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(819),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(820),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(819),
                            TrainerId = 1
                        },
                        new
                        {
                            Id = 3,
                            AnimalId = 2,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(822),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(822),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(821),
                            TrainerId = 2
                        },
                        new
                        {
                            Id = 4,
                            AnimalId = 12,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(824),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(824),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(823),
                            TrainerId = 2
                        },
                        new
                        {
                            Id = 5,
                            AnimalId = 3,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(826),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(827),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(826),
                            TrainerId = 3
                        },
                        new
                        {
                            Id = 6,
                            AnimalId = 13,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(828),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(829),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(828),
                            TrainerId = 3
                        },
                        new
                        {
                            Id = 7,
                            AnimalId = 4,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(830),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(831),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(830),
                            TrainerId = 4
                        },
                        new
                        {
                            Id = 8,
                            AnimalId = 14,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(833),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(833),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(832),
                            TrainerId = 4
                        },
                        new
                        {
                            Id = 9,
                            AnimalId = 5,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(835),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(835),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(834),
                            TrainerId = 5
                        },
                        new
                        {
                            Id = 10,
                            AnimalId = 15,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(837),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(837),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(836),
                            TrainerId = 5
                        },
                        new
                        {
                            Id = 11,
                            AnimalId = 6,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(839),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(840),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(839),
                            TrainerId = 1
                        },
                        new
                        {
                            Id = 12,
                            AnimalId = 16,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(841),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(842),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(841),
                            TrainerId = 1
                        },
                        new
                        {
                            Id = 13,
                            AnimalId = 7,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(843),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(844),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(843),
                            TrainerId = 2
                        },
                        new
                        {
                            Id = 14,
                            AnimalId = 17,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(846),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(846),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(845),
                            TrainerId = 2
                        },
                        new
                        {
                            Id = 15,
                            AnimalId = 8,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(848),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(848),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(847),
                            TrainerId = 3
                        },
                        new
                        {
                            Id = 16,
                            AnimalId = 18,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(850),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(850),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(849),
                            TrainerId = 3
                        },
                        new
                        {
                            Id = 17,
                            AnimalId = 9,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(852),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(853),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(851),
                            TrainerId = 4
                        },
                        new
                        {
                            Id = 18,
                            AnimalId = 19,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(854),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(855),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(854),
                            TrainerId = 4
                        },
                        new
                        {
                            Id = 19,
                            AnimalId = 10,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(856),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(857),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(856),
                            TrainerId = 5
                        },
                        new
                        {
                            Id = 20,
                            AnimalId = 20,
                            CreationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(858),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(859),
                            StartDate = new DateTime(2023, 11, 2, 16, 51, 25, 509, DateTimeKind.Local).AddTicks(858),
                            TrainerId = 5
                        });
                });

            modelBuilder.Entity("Domain.Entities.AnimalInformation", b =>
                {
                    b.HasOne("Domain.Entities.Species", "Species")
                        .WithMany("Animals")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Species");
                });

            modelBuilder.Entity("Domain.Entities.Cage", b =>
                {
                    b.HasOne("Domain.Entities.Area", "Area")
                        .WithMany("Cages")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("Domain.Entities.CageHistory", b =>
                {
                    b.HasOne("Domain.Entities.AnimalInformation", "Animal")
                        .WithMany("CageHistories")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Cage", "Cage")
                        .WithMany("CageHistories")
                        .HasForeignKey("CageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Cage");
                });

            modelBuilder.Entity("Domain.Entities.DietDetail", b =>
                {
                    b.HasOne("Domain.Entities.AnimalInformation", "Animal")
                        .WithMany("DietDetails")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Diet", "Diet")
                        .WithMany("DietDetails")
                        .HasForeignKey("DietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Diet");
                });

            modelBuilder.Entity("Domain.Entities.FeedHistory", b =>
                {
                    b.HasOne("Domain.Entities.AnimalInformation", "Animal")
                        .WithMany("FeedHistories")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Diet", "Diet")
                        .WithMany("FeedHistories")
                        .HasForeignKey("DietId")
                        .OnDelete(DeleteBehavior.SetNull);

                    b.HasOne("Domain.Entities.Account", "Trainer")
                        .WithMany("FeedHistories")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Diet");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("Domain.Entities.Ticket", b =>
                {
                    b.HasOne("Domain.Entities.TicketOrder", "OrderInformation")
                        .WithMany("Tickets")
                        .HasForeignKey("OrderInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderInformation");
                });

            modelBuilder.Entity("Domain.Entities.TrainingDetail", b =>
                {
                    b.HasOne("Domain.Entities.AnimalInformation", "Animal")
                        .WithMany("TrainingDetails")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Account", "Trainer")
                        .WithMany("TrainingDetails")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("Domain.Entities.Account", b =>
                {
                    b.Navigation("FeedHistories");

                    b.Navigation("TrainingDetails");
                });

            modelBuilder.Entity("Domain.Entities.AnimalInformation", b =>
                {
                    b.Navigation("CageHistories");

                    b.Navigation("DietDetails");

                    b.Navigation("FeedHistories");

                    b.Navigation("TrainingDetails");
                });

            modelBuilder.Entity("Domain.Entities.Area", b =>
                {
                    b.Navigation("Cages");
                });

            modelBuilder.Entity("Domain.Entities.Cage", b =>
                {
                    b.Navigation("CageHistories");
                });

            modelBuilder.Entity("Domain.Entities.Diet", b =>
                {
                    b.Navigation("DietDetails");

                    b.Navigation("FeedHistories");
                });

            modelBuilder.Entity("Domain.Entities.Species", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("Domain.Entities.TicketOrder", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
