// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20231026123708_Edit Image Type")]
    partial class EditImageType
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Experiences")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 34, DateTimeKind.Local).AddTicks(3752),
                            Fullname = "Lion Tamer",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 34, DateTimeKind.Local).AddTicks(3764),
                            Password = "nFJU23RQARg1LMfTngQ+XMqrZg47sjTnSCRA8GmJqYzQXC2S",
                            Role = 1,
                            Username = "LionTamer"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 38, DateTimeKind.Local).AddTicks(5012),
                            Fullname = "Pachyderm Pro",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 38, DateTimeKind.Local).AddTicks(5014),
                            Password = "5VzDcLOApdpTWewVF3fb3+iDsURuDehDAPnffCm/8eUiRjqU",
                            Role = 1,
                            Username = "PachydermPro"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 42, DateTimeKind.Local).AddTicks(6312),
                            Fullname = "Shark Whisperer",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 42, DateTimeKind.Local).AddTicks(6313),
                            Password = "8SRRAOvw1X6TU4BN1i8CyMVsHIWoWW9S/jw02Qnz+hFWTlUr",
                            Role = 1,
                            Username = "SharkWhisperer"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 46, DateTimeKind.Local).AddTicks(7456),
                            Fullname = "Fox Friend",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 46, DateTimeKind.Local).AddTicks(7457),
                            Password = "h1DZMa8Je49M8HKcd5IuVl7pNT9auAWuGnc1QD3M5+9ikE+X",
                            Role = 1,
                            Username = "FoxFriend"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 51, DateTimeKind.Local).AddTicks(2781),
                            Fullname = "Penguin Pal",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 51, DateTimeKind.Local).AddTicks(2793),
                            Password = "cEhy3uXNgMWIdZfxxJIRRz6M/blDtEiqErfM7h1P3yOZ2fIP",
                            Role = 1,
                            Username = "PenguinPal"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 55, DateTimeKind.Local).AddTicks(3979),
                            Fullname = "Nhân viên sở thú",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 55, DateTimeKind.Local).AddTicks(3982),
                            Password = "HDiFoYJ1qA36rIvTbyxW4s80ifPs2OzuDjyVDI4barjHLbZD",
                            Role = 0,
                            Username = "staff"
                        });
                });

            modelBuilder.Entity("Domain.Entities.AnimalInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Height")
                        .HasColumnType("float");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("SpeciesId");

                    b.ToTable("AnimalInformations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2018, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9719),
                            Description = "Majestic African lion named Simba.",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9729),
                            Name = "Simba",
                            SpeciesId = 1,
                            Weight = 180.0
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2015, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9811),
                            Description = "Gentle Asian elephant named Dumbo.",
                            Height = 10.0,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9812),
                            Name = "Dumbo",
                            SpeciesId = 2,
                            Weight = 4500.0
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(2017, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9821),
                            Description = "Fearsome great white shark named Jaws.",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9821),
                            Name = "Jaws",
                            SpeciesId = 3,
                            Weight = 2000.0
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(2020, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9827),
                            Description = "Cunning European red fox named Foxy.",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9828),
                            Name = "Foxy",
                            SpeciesId = 4,
                            Weight = 10.0
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(2019, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9834),
                            Description = "Regal emperor penguin named Emmy.",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9835),
                            Name = "Emmy",
                            SpeciesId = 5,
                            Weight = 35.0
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(2017, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9841),
                            Description = "Energetic kangaroo named Kang.",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9841),
                            Name = "Kang",
                            SpeciesId = 6,
                            Weight = 70.0
                        },
                        new
                        {
                            Id = 7,
                            BirthDate = new DateTime(2016, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9847),
                            Description = "Majestic grizzly bear named Bear.",
                            Height = 5.0,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9847),
                            Name = "Bear",
                            SpeciesId = 7,
                            Weight = 800.0
                        },
                        new
                        {
                            Id = 8,
                            BirthDate = new DateTime(2015, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9853),
                            Description = "Proud polar bear named Nanook.",
                            Height = 4.5,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9854),
                            Name = "Nanook",
                            SpeciesId = 8,
                            Weight = 900.0
                        },
                        new
                        {
                            Id = 9,
                            BirthDate = new DateTime(2016, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9860),
                            Description = "Fierce Bengal tiger named Raja.",
                            Height = 3.0,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9860),
                            Name = "Raja",
                            SpeciesId = 9,
                            Weight = 200.0
                        },
                        new
                        {
                            Id = 10,
                            BirthDate = new DateTime(2017, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9867),
                            Description = "Adorable panda named Pandy.",
                            Height = 2.0,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9867),
                            Name = "Pandy",
                            SpeciesId = 10,
                            Weight = 150.0
                        },
                        new
                        {
                            Id = 11,
                            BirthDate = new DateTime(2019, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9873),
                            Description = "Graceful African lioness named Zara.",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9874),
                            Name = "Zara",
                            SpeciesId = 1,
                            Weight = 150.0
                        },
                        new
                        {
                            Id = 12,
                            BirthDate = new DateTime(2016, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9880),
                            Description = "Gentle Asian elephant named Babar.",
                            Height = 9.5,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9880),
                            Name = "Babar",
                            SpeciesId = 2,
                            Weight = 4000.0
                        },
                        new
                        {
                            Id = 13,
                            BirthDate = new DateTime(2018, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9886),
                            Description = "Majestic great white shark named Fins.",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9887),
                            Name = "Fins",
                            SpeciesId = 3,
                            Weight = 1800.0
                        },
                        new
                        {
                            Id = 14,
                            BirthDate = new DateTime(2021, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9892),
                            Description = "Clever European red fox named Sly.",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9893),
                            Name = "Sly",
                            SpeciesId = 4,
                            Weight = 12.0
                        },
                        new
                        {
                            Id = 15,
                            BirthDate = new DateTime(2020, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9898),
                            Description = "Charming emperor penguin named Waddle.",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9899),
                            Name = "Waddle",
                            SpeciesId = 5,
                            Weight = 30.0
                        },
                        new
                        {
                            Id = 16,
                            BirthDate = new DateTime(2017, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9905),
                            Description = "Energetic kangaroo named Joey.",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9905),
                            Name = "Joey",
                            SpeciesId = 6,
                            Weight = 75.0
                        },
                        new
                        {
                            Id = 17,
                            BirthDate = new DateTime(2022, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9911),
                            Description = "Playful grizzly bear cub named Bearly.",
                            Height = 2.5,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9912),
                            Name = "Bearly",
                            SpeciesId = 7,
                            Weight = 150.0
                        },
                        new
                        {
                            Id = 18,
                            BirthDate = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9917),
                            Description = "Young polar bear named Snowy.",
                            Height = 3.0,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9918),
                            Name = "Snowy",
                            SpeciesId = 8,
                            Weight = 300.0
                        },
                        new
                        {
                            Id = 19,
                            BirthDate = new DateTime(2022, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9924),
                            Description = "Adventurous Bengal tiger cub named Tyga.",
                            Height = 2.0,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9924),
                            Name = "Tyga",
                            SpeciesId = 9,
                            Weight = 50.0
                        },
                        new
                        {
                            Id = 20,
                            BirthDate = new DateTime(2019, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9930),
                            Description = "Bamboo-loving panda named Bamboo.",
                            Height = 1.5,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 59, DateTimeKind.Local).AddTicks(9931),
                            Name = "Bamboo",
                            SpeciesId = 10,
                            Weight = 120.0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Areas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 100,
                            Code = "A",
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(2763),
                            Description = "An exhibit featuring animals from the African savanna",
                            IsDeleted = false,
                            Location = "Savanna Exhibit",
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(2769),
                            Name = "African Savanna"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 80,
                            Code = "B",
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(2771),
                            Description = "A lush and diverse rainforest habitat",
                            IsDeleted = false,
                            Location = "Rainforest Pavilion",
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(2772),
                            Name = "Rainforest"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 50,
                            Code = "C",
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(2774),
                            Description = "A cold and watery habitat for penguins",
                            IsDeleted = false,
                            Location = "Aquatic Pavilion",
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(2774),
                            Name = "Penguin Cove"
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 60,
                            Code = "D",
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(2776),
                            Description = "A hot and arid desert environment",
                            IsDeleted = false,
                            Location = "Desert Exhibit",
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(2777),
                            Name = "Desert Oasis"
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 70,
                            Code = "E",
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(2778),
                            Description = "A vibrant coral reef with colorful fish",
                            IsDeleted = false,
                            Location = "Aquatic Pavilion",
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(2779),
                            Name = "Tropical Reef"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Cage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Cages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AreaId = 1,
                            Capacity = 10,
                            Code = "A0001",
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(4285),
                            Description = "A spacious exhibit featuring African animals.",
                            IsDeleted = false,
                            Location = "Savannah Exhibit",
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(4288),
                            Name = "African Safari"
                        },
                        new
                        {
                            Id = 2,
                            AreaId = 1,
                            Capacity = 15,
                            Code = "A0002",
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(4291),
                            Description = "A dedicated area for Asian elephants.",
                            IsDeleted = false,
                            Location = "Asian Elephant Pavilion",
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(4291),
                            Name = "Elephant Sanctuary"
                        },
                        new
                        {
                            Id = 3,
                            AreaId = 2,
                            Capacity = 12,
                            Code = "B0003",
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(4293),
                            Description = "A large tank showcasing great white sharks.",
                            IsDeleted = false,
                            Location = "Marine World",
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(4294),
                            Name = "Shark Tank"
                        },
                        new
                        {
                            Id = 4,
                            AreaId = 2,
                            Capacity = 20,
                            Code = "B0004",
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(4296),
                            Description = "A natural habitat for grizzly bears.",
                            IsDeleted = false,
                            Location = "North American Habitat",
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(4296),
                            Name = "Grizzly Wilderness"
                        },
                        new
                        {
                            Id = 5,
                            AreaId = 3,
                            Capacity = 8,
                            Code = "C0005",
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(4298),
                            Description = "A chilly paradise for emperor penguins.",
                            IsDeleted = false,
                            Location = "Antarctic Exhibit",
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(4299),
                            Name = "Penguin Paradise"
                        },
                        new
                        {
                            Id = 6,
                            AreaId = 1,
                            Capacity = 20,
                            Code = "A0006",
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(4300),
                            Description = "A vast exhibit showcasing African wildlife.",
                            IsDeleted = false,
                            Location = "Wide Open Savannah",
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(4301),
                            Name = "African Plains"
                        },
                        new
                        {
                            Id = 7,
                            AreaId = 2,
                            Capacity = 18,
                            Code = "B0007",
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(4303),
                            Description = "A chilly environment for polar animals.",
                            IsDeleted = false,
                            Location = "Arctic Enclosure",
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(4303),
                            Name = "Polar Icecaps"
                        },
                        new
                        {
                            Id = 8,
                            AreaId = 3,
                            Capacity = 12,
                            Code = "C0008",
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(4305),
                            Description = "An arid landscape for Australian fauna.",
                            IsDeleted = false,
                            Location = "Australian Habitat",
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(4306),
                            Name = "Aussie Outback"
                        },
                        new
                        {
                            Id = 9,
                            AreaId = 4,
                            Capacity = 15,
                            Code = "D0009",
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(4307),
                            Description = "A dense forest for Siberian wildlife.",
                            IsDeleted = false,
                            Location = "Russian Wilderness",
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(4308),
                            Name = "Siberian Taiga"
                        },
                        new
                        {
                            Id = 10,
                            AreaId = 5,
                            Capacity = 25,
                            Code = "E0010",
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(4310),
                            Description = "A lush jungle exhibit for Amazon species.",
                            IsDeleted = false,
                            Location = "South American Jungle",
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(4310),
                            Name = "Amazon Rainforest"
                        });
                });

            modelBuilder.Entity("Domain.Entities.CageHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<int>("CageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("CageId");

                    b.ToTable("CageHistories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnimalId = 1,
                            CageId = 1,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7851),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7852),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7847)
                        },
                        new
                        {
                            Id = 2,
                            AnimalId = 2,
                            CageId = 2,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7854),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7855),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7854)
                        },
                        new
                        {
                            Id = 3,
                            AnimalId = 3,
                            CageId = 3,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7856),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7857),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7856)
                        },
                        new
                        {
                            Id = 4,
                            AnimalId = 4,
                            CageId = 4,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7859),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7859),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7858)
                        },
                        new
                        {
                            Id = 5,
                            AnimalId = 5,
                            CageId = 5,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7861),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7861),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7860)
                        },
                        new
                        {
                            Id = 6,
                            AnimalId = 6,
                            CageId = 6,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7863),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7863),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7862)
                        },
                        new
                        {
                            Id = 7,
                            AnimalId = 7,
                            CageId = 7,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7865),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7866),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7865)
                        },
                        new
                        {
                            Id = 8,
                            AnimalId = 8,
                            CageId = 8,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7867),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7868),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7867)
                        },
                        new
                        {
                            Id = 9,
                            AnimalId = 9,
                            CageId = 9,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7869),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7870),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7869)
                        },
                        new
                        {
                            Id = 10,
                            AnimalId = 10,
                            CageId = 10,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7872),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7872),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7871)
                        },
                        new
                        {
                            Id = 11,
                            AnimalId = 11,
                            CageId = 1,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7874),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7874),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7873)
                        },
                        new
                        {
                            Id = 12,
                            AnimalId = 12,
                            CageId = 2,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7876),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7877),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7876)
                        },
                        new
                        {
                            Id = 13,
                            AnimalId = 13,
                            CageId = 3,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7878),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7879),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7878)
                        },
                        new
                        {
                            Id = 14,
                            AnimalId = 14,
                            CageId = 4,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7880),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7881),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7880)
                        },
                        new
                        {
                            Id = 15,
                            AnimalId = 15,
                            CageId = 5,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7883),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7883),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7882)
                        },
                        new
                        {
                            Id = 16,
                            AnimalId = 16,
                            CageId = 6,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7885),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7885),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7884)
                        },
                        new
                        {
                            Id = 17,
                            AnimalId = 17,
                            CageId = 7,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7887),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7888),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7886)
                        },
                        new
                        {
                            Id = 18,
                            AnimalId = 18,
                            CageId = 8,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7889),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7890),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7889)
                        },
                        new
                        {
                            Id = 19,
                            AnimalId = 19,
                            CageId = 9,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7891),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7892),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7891)
                        },
                        new
                        {
                            Id = 20,
                            AnimalId = 20,
                            CageId = 10,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7894),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7894),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 60, DateTimeKind.Local).AddTicks(7893)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Diet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DietName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("TimesPerDay")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Diets");
                });

            modelBuilder.Entity("Domain.Entities.DietDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DietId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("DietId");

                    b.ToTable("DietDetails");
                });

            modelBuilder.Entity("Domain.Entities.FeedHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FeedingDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("TrainerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("TrainerId");

                    b.ToTable("FeedHistories");
                });

            modelBuilder.Entity("Domain.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("Domain.Entities.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Habitat")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LifeSpan")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScientificName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WildDiet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Species");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 61, DateTimeKind.Local).AddTicks(6027),
                            Description = "The African lion is a large predatory cat native to Africa.",
                            Habitat = 0,
                            IsDeleted = false,
                            LifeSpan = 10,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 61, DateTimeKind.Local).AddTicks(6034),
                            Name = "African Lion",
                            ScientificName = "Panthera leo",
                            WildDiet = "Wild antelopes, zebras, and other herbivores"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 61, DateTimeKind.Local).AddTicks(6037),
                            Description = "The Asian elephant is the largest living land animal in Asia.",
                            Habitat = 1,
                            IsDeleted = false,
                            LifeSpan = 60,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 61, DateTimeKind.Local).AddTicks(6038),
                            Name = "Asian Elephant",
                            ScientificName = "Elephas maximus",
                            WildDiet = "Grasses, bamboo, fruits, and tree bark"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 61, DateTimeKind.Local).AddTicks(6039),
                            Description = "The great white shark is a fearsome predator of the oceans.",
                            Habitat = 2,
                            IsDeleted = false,
                            LifeSpan = 70,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 61, DateTimeKind.Local).AddTicks(6040),
                            Name = "Great White Shark",
                            ScientificName = "Carcharodon carcharias",
                            WildDiet = "Seals, sea lions, fish, and other sharks"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 61, DateTimeKind.Local).AddTicks(6042),
                            Description = "The European red fox is a cunning and adaptable predator.",
                            Habitat = 3,
                            IsDeleted = false,
                            LifeSpan = 5,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 61, DateTimeKind.Local).AddTicks(6042),
                            Name = "European Red Fox",
                            ScientificName = "Vulpes vulpes",
                            WildDiet = "Small mammals, birds, fruits, and insects"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 61, DateTimeKind.Local).AddTicks(6044),
                            Description = "The emperor penguin is the largest penguin species and lives in Antarctica.",
                            Habitat = 4,
                            IsDeleted = false,
                            LifeSpan = 20,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 61, DateTimeKind.Local).AddTicks(6045),
                            Name = "Emperor Penguin",
                            ScientificName = "Aptenodytes forsteri",
                            WildDiet = "Fish, squid, and krill"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 61, DateTimeKind.Local).AddTicks(6046),
                            Description = "Kangaroos are marsupials known for their powerful hind legs and pouches.",
                            Habitat = 5,
                            IsDeleted = false,
                            LifeSpan = 6,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 61, DateTimeKind.Local).AddTicks(6047),
                            Name = "Kangaroo",
                            ScientificName = "Macropus",
                            WildDiet = "Grasses and plants"
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 61, DateTimeKind.Local).AddTicks(6049),
                            Description = "The grizzly bear is a large and formidable North American mammal.",
                            Habitat = 6,
                            IsDeleted = false,
                            LifeSpan = 20,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 61, DateTimeKind.Local).AddTicks(6049),
                            Name = "Grizzly Bear",
                            ScientificName = "Ursus arctos horribilis",
                            WildDiet = "Fish, berries, roots, and small mammals"
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 61, DateTimeKind.Local).AddTicks(6051),
                            Description = "The polar bear is a marine mammal adapted to the Arctic environment.",
                            Habitat = 4,
                            IsDeleted = false,
                            LifeSpan = 25,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 61, DateTimeKind.Local).AddTicks(6052),
                            Name = "Polar Bear",
                            ScientificName = "Ursus maritimus",
                            WildDiet = "Seals and fish"
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 61, DateTimeKind.Local).AddTicks(6053),
                            Description = "The Bengal tiger is a majestic big cat native to the Indian subcontinent.",
                            Habitat = 1,
                            IsDeleted = false,
                            LifeSpan = 15,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 61, DateTimeKind.Local).AddTicks(6054),
                            Name = "Bengal Tiger",
                            ScientificName = "Panthera tigris tigris",
                            WildDiet = "Deer, wild boar, and other ungulates"
                        },
                        new
                        {
                            Id = 10,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 61, DateTimeKind.Local).AddTicks(6056),
                            Description = "The panda is an iconic bear species known for its bamboo diet.",
                            Habitat = 1,
                            IsDeleted = false,
                            LifeSpan = 20,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 61, DateTimeKind.Local).AddTicks(6056),
                            Name = "Panda",
                            ScientificName = "Ailuropoda melanoleuca",
                            WildDiet = "Bamboo shoots and leaves"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("OrderInformationId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("TicketType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("OrderInformationId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Domain.Entities.TicketOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("TotalMoney")
                        .HasColumnType("float");

                    b.Property<int>("TotalTicket")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("TicketOrders");
                });

            modelBuilder.Entity("Domain.Entities.TrainingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("TrainerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("TrainerId");

                    b.ToTable("TrainingDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnimalId = 1,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7948),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7949),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7938),
                            TrainerId = 1
                        },
                        new
                        {
                            Id = 2,
                            AnimalId = 11,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7951),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7952),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7951),
                            TrainerId = 1
                        },
                        new
                        {
                            Id = 3,
                            AnimalId = 2,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7953),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7954),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7953),
                            TrainerId = 2
                        },
                        new
                        {
                            Id = 4,
                            AnimalId = 12,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7955),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7956),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7955),
                            TrainerId = 2
                        },
                        new
                        {
                            Id = 5,
                            AnimalId = 3,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7958),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7958),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7957),
                            TrainerId = 3
                        },
                        new
                        {
                            Id = 6,
                            AnimalId = 13,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7960),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7960),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7959),
                            TrainerId = 3
                        },
                        new
                        {
                            Id = 7,
                            AnimalId = 4,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7962),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7962),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7961),
                            TrainerId = 4
                        },
                        new
                        {
                            Id = 8,
                            AnimalId = 14,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7964),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7965),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7964),
                            TrainerId = 4
                        },
                        new
                        {
                            Id = 9,
                            AnimalId = 5,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7966),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7967),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7966),
                            TrainerId = 5
                        },
                        new
                        {
                            Id = 10,
                            AnimalId = 15,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7968),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7969),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7968),
                            TrainerId = 5
                        },
                        new
                        {
                            Id = 11,
                            AnimalId = 6,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7971),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7971),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7970),
                            TrainerId = 1
                        },
                        new
                        {
                            Id = 12,
                            AnimalId = 16,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7973),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7973),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7972),
                            TrainerId = 1
                        },
                        new
                        {
                            Id = 13,
                            AnimalId = 7,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7975),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7976),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7974),
                            TrainerId = 2
                        },
                        new
                        {
                            Id = 14,
                            AnimalId = 17,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7977),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7978),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7977),
                            TrainerId = 2
                        },
                        new
                        {
                            Id = 15,
                            AnimalId = 8,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7979),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7980),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7979),
                            TrainerId = 3
                        },
                        new
                        {
                            Id = 16,
                            AnimalId = 18,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7982),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7982),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7981),
                            TrainerId = 3
                        },
                        new
                        {
                            Id = 17,
                            AnimalId = 9,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7984),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7984),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7983),
                            TrainerId = 4
                        },
                        new
                        {
                            Id = 18,
                            AnimalId = 19,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7986),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7986),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7985),
                            TrainerId = 4
                        },
                        new
                        {
                            Id = 19,
                            AnimalId = 10,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7988),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7989),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7988),
                            TrainerId = 5
                        },
                        new
                        {
                            Id = 20,
                            AnimalId = 20,
                            CreationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7990),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7991),
                            StartDate = new DateTime(2023, 10, 26, 19, 37, 8, 62, DateTimeKind.Local).AddTicks(7990),
                            TrainerId = 5
                        });
                });

            modelBuilder.Entity("Domain.Entities.AnimalInformation", b =>
                {
                    b.HasOne("Domain.Entities.Species", "Species")
                        .WithMany("Animals")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Species");
                });

            modelBuilder.Entity("Domain.Entities.Cage", b =>
                {
                    b.HasOne("Domain.Entities.Area", "Area")
                        .WithMany("Cages")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("Domain.Entities.CageHistory", b =>
                {
                    b.HasOne("Domain.Entities.AnimalInformation", "Animal")
                        .WithMany("CageHistories")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Cage", "Cage")
                        .WithMany("CageHistories")
                        .HasForeignKey("CageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Cage");
                });

            modelBuilder.Entity("Domain.Entities.DietDetail", b =>
                {
                    b.HasOne("Domain.Entities.AnimalInformation", "Animal")
                        .WithMany("DietDetails")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Diet", "Diet")
                        .WithMany("DietDetails")
                        .HasForeignKey("DietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Diet");
                });

            modelBuilder.Entity("Domain.Entities.FeedHistory", b =>
                {
                    b.HasOne("Domain.Entities.AnimalInformation", "Animal")
                        .WithMany("FeedHistories")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Account", "Trainer")
                        .WithMany("FeedHistories")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("Domain.Entities.Ticket", b =>
                {
                    b.HasOne("Domain.Entities.TicketOrder", "OrderInformation")
                        .WithMany("Tickets")
                        .HasForeignKey("OrderInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderInformation");
                });

            modelBuilder.Entity("Domain.Entities.TrainingDetail", b =>
                {
                    b.HasOne("Domain.Entities.AnimalInformation", "Animal")
                        .WithMany("TrainingDetails")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Account", "Trainer")
                        .WithMany("TrainingDetails")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("Domain.Entities.Account", b =>
                {
                    b.Navigation("FeedHistories");

                    b.Navigation("TrainingDetails");
                });

            modelBuilder.Entity("Domain.Entities.AnimalInformation", b =>
                {
                    b.Navigation("CageHistories");

                    b.Navigation("DietDetails");

                    b.Navigation("FeedHistories");

                    b.Navigation("TrainingDetails");
                });

            modelBuilder.Entity("Domain.Entities.Area", b =>
                {
                    b.Navigation("Cages");
                });

            modelBuilder.Entity("Domain.Entities.Cage", b =>
                {
                    b.Navigation("CageHistories");
                });

            modelBuilder.Entity("Domain.Entities.Diet", b =>
                {
                    b.Navigation("DietDetails");
                });

            modelBuilder.Entity("Domain.Entities.Species", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("Domain.Entities.TicketOrder", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
