// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20231031101458_Add Diets Schema")]
    partial class AddDietsSchema
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Experiences")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 4, DateTimeKind.Local).AddTicks(7548),
                            Fullname = "Lion Tamer",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 4, DateTimeKind.Local).AddTicks(7561),
                            Password = "GAfOe0DXd8CtbgRYdXodoaqoE8it7+v+lc+N5eNIZjpzyjo/",
                            Role = 1,
                            Username = "LionTamer"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 8, DateTimeKind.Local).AddTicks(2771),
                            Fullname = "Pachyderm Pro",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 8, DateTimeKind.Local).AddTicks(2773),
                            Password = "p1HmMQgkWeeAIOmJqx+W3FPbplb4Jp5uV7l8PVv/OrVQfhJQ",
                            Role = 1,
                            Username = "PachydermPro"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 11, DateTimeKind.Local).AddTicks(7085),
                            Fullname = "Shark Whisperer",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 11, DateTimeKind.Local).AddTicks(7086),
                            Password = "j+sBa04XdxJEKjU58QoHwOQPC5Ud+AQ0R+rg1IScgQfNkeSp",
                            Role = 1,
                            Username = "SharkWhisperer"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 15, DateTimeKind.Local).AddTicks(975),
                            Fullname = "Fox Friend",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 15, DateTimeKind.Local).AddTicks(982),
                            Password = "dq+lEEyqM0Vn0YNLS8h3tePyaTqnv6RIUXwpN+SzdSCQSBOd",
                            Role = 1,
                            Username = "FoxFriend"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 18, DateTimeKind.Local).AddTicks(6801),
                            Fullname = "Penguin Pal",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 18, DateTimeKind.Local).AddTicks(6805),
                            Password = "SiLD9no18oGmI8eKLntGL67YJRq/4QaVcGWI/W08vBt0mgib",
                            Role = 1,
                            Username = "PenguinPal"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 21, DateTimeKind.Local).AddTicks(9526),
                            Fullname = "Nhân viên sở thú",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 21, DateTimeKind.Local).AddTicks(9526),
                            Password = "Junr5IHgOH9JktCE+n23mkTN8sEpPrSo8fm0tetmjy90ad87",
                            Role = 0,
                            Username = "staff"
                        });
                });

            modelBuilder.Entity("Domain.Entities.AnimalInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Height")
                        .HasColumnType("float");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("SpeciesId");

                    b.ToTable("AnimalInformations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2018, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8389),
                            Description = "Majestic African lion named Simba.",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8394),
                            Name = "Simba",
                            SpeciesId = 1,
                            Status = 1,
                            Weight = 180.0
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2015, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8490),
                            Description = "Gentle Asian elephant named Dumbo.",
                            Height = 10.0,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8491),
                            Name = "Dumbo",
                            SpeciesId = 2,
                            Status = 1,
                            Weight = 4500.0
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(2017, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8498),
                            Description = "Fearsome great white shark named Jaws.",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8499),
                            Name = "Jaws",
                            SpeciesId = 3,
                            Status = 1,
                            Weight = 2000.0
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(2020, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8504),
                            Description = "Cunning European red fox named Foxy.",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8505),
                            Name = "Foxy",
                            SpeciesId = 4,
                            Status = 1,
                            Weight = 10.0
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(2019, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8513),
                            Description = "Regal emperor penguin named Emmy.",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8513),
                            Name = "Emmy",
                            SpeciesId = 5,
                            Status = 1,
                            Weight = 35.0
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(2017, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8519),
                            Description = "Energetic kangaroo named Kang.",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8520),
                            Name = "Kang",
                            SpeciesId = 6,
                            Status = 1,
                            Weight = 70.0
                        },
                        new
                        {
                            Id = 7,
                            BirthDate = new DateTime(2016, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8525),
                            Description = "Majestic grizzly bear named Bear.",
                            Height = 5.0,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8526),
                            Name = "Bear",
                            SpeciesId = 7,
                            Status = 1,
                            Weight = 800.0
                        },
                        new
                        {
                            Id = 8,
                            BirthDate = new DateTime(2015, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8531),
                            Description = "Proud polar bear named Nanook.",
                            Height = 4.5,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8531),
                            Name = "Nanook",
                            SpeciesId = 8,
                            Status = 1,
                            Weight = 900.0
                        },
                        new
                        {
                            Id = 9,
                            BirthDate = new DateTime(2016, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8537),
                            Description = "Fierce Bengal tiger named Raja.",
                            Height = 3.0,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8537),
                            Name = "Raja",
                            SpeciesId = 9,
                            Status = 1,
                            Weight = 200.0
                        },
                        new
                        {
                            Id = 10,
                            BirthDate = new DateTime(2017, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8542),
                            Description = "Adorable panda named Pandy.",
                            Height = 2.0,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8543),
                            Name = "Pandy",
                            SpeciesId = 10,
                            Status = 1,
                            Weight = 150.0
                        },
                        new
                        {
                            Id = 11,
                            BirthDate = new DateTime(2019, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8548),
                            Description = "Graceful African lioness named Zara.",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8548),
                            Name = "Zara",
                            SpeciesId = 1,
                            Status = 1,
                            Weight = 150.0
                        },
                        new
                        {
                            Id = 12,
                            BirthDate = new DateTime(2016, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8553),
                            Description = "Gentle Asian elephant named Babar.",
                            Height = 9.5,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8554),
                            Name = "Babar",
                            SpeciesId = 2,
                            Status = 1,
                            Weight = 4000.0
                        },
                        new
                        {
                            Id = 13,
                            BirthDate = new DateTime(2018, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8560),
                            Description = "Majestic great white shark named Fins.",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8560),
                            Name = "Fins",
                            SpeciesId = 3,
                            Status = 1,
                            Weight = 1800.0
                        },
                        new
                        {
                            Id = 14,
                            BirthDate = new DateTime(2021, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8565),
                            Description = "Clever European red fox named Sly.",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8566),
                            Name = "Sly",
                            SpeciesId = 4,
                            Status = 1,
                            Weight = 12.0
                        },
                        new
                        {
                            Id = 15,
                            BirthDate = new DateTime(2020, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8570),
                            Description = "Charming emperor penguin named Waddle.",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8571),
                            Name = "Waddle",
                            SpeciesId = 5,
                            Status = 1,
                            Weight = 30.0
                        },
                        new
                        {
                            Id = 16,
                            BirthDate = new DateTime(2017, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8576),
                            Description = "Energetic kangaroo named Joey.",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8576),
                            Name = "Joey",
                            SpeciesId = 6,
                            Status = 1,
                            Weight = 75.0
                        },
                        new
                        {
                            Id = 17,
                            BirthDate = new DateTime(2022, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8581),
                            Description = "Playful grizzly bear cub named Bearly.",
                            Height = 2.5,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8582),
                            Name = "Bearly",
                            SpeciesId = 7,
                            Status = 1,
                            Weight = 150.0
                        },
                        new
                        {
                            Id = 18,
                            BirthDate = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8587),
                            Description = "Young polar bear named Snowy.",
                            Height = 3.0,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8588),
                            Name = "Snowy",
                            SpeciesId = 8,
                            Status = 1,
                            Weight = 300.0
                        },
                        new
                        {
                            Id = 19,
                            BirthDate = new DateTime(2022, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8593),
                            Description = "Adventurous Bengal tiger cub named Tyga.",
                            Height = 2.0,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8593),
                            Name = "Tyga",
                            SpeciesId = 9,
                            Status = 1,
                            Weight = 50.0
                        },
                        new
                        {
                            Id = 20,
                            BirthDate = new DateTime(2019, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8598),
                            Description = "Bamboo-loving panda named Bamboo.",
                            Height = 1.5,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 25, DateTimeKind.Local).AddTicks(8599),
                            Name = "Bamboo",
                            SpeciesId = 10,
                            Status = 1,
                            Weight = 120.0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Areas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 100,
                            Code = "A",
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(1046),
                            Description = "An exhibit featuring animals from the African savanna",
                            IsDeleted = false,
                            Location = "Savanna Exhibit",
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(1049),
                            Name = "African Savanna"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 80,
                            Code = "B",
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(1052),
                            Description = "A lush and diverse rainforest habitat",
                            IsDeleted = false,
                            Location = "Rainforest Pavilion",
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(1052),
                            Name = "Rainforest"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 50,
                            Code = "C",
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(1054),
                            Description = "A cold and watery habitat for penguins",
                            IsDeleted = false,
                            Location = "Aquatic Pavilion",
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(1054),
                            Name = "Penguin Cove"
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 60,
                            Code = "D",
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(1056),
                            Description = "A hot and arid desert environment",
                            IsDeleted = false,
                            Location = "Desert Exhibit",
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(1056),
                            Name = "Desert Oasis"
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 70,
                            Code = "E",
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(1058),
                            Description = "A vibrant coral reef with colorful fish",
                            IsDeleted = false,
                            Location = "Aquatic Pavilion",
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(1058),
                            Name = "Tropical Reef"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Cage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Cages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AreaId = 1,
                            Capacity = 10,
                            Code = "A0001",
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(2470),
                            Description = "A spacious exhibit featuring African animals.",
                            IsDeleted = false,
                            Location = "Savannah Exhibit",
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(2474),
                            Name = "African Safari"
                        },
                        new
                        {
                            Id = 2,
                            AreaId = 1,
                            Capacity = 15,
                            Code = "A0002",
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(2476),
                            Description = "A dedicated area for Asian elephants.",
                            IsDeleted = false,
                            Location = "Asian Elephant Pavilion",
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(2477),
                            Name = "Elephant Sanctuary"
                        },
                        new
                        {
                            Id = 3,
                            AreaId = 2,
                            Capacity = 12,
                            Code = "B0003",
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(2478),
                            Description = "A large tank showcasing great white sharks.",
                            IsDeleted = false,
                            Location = "Marine World",
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(2479),
                            Name = "Shark Tank"
                        },
                        new
                        {
                            Id = 4,
                            AreaId = 2,
                            Capacity = 20,
                            Code = "B0004",
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(2481),
                            Description = "A natural habitat for grizzly bears.",
                            IsDeleted = false,
                            Location = "North American Habitat",
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(2481),
                            Name = "Grizzly Wilderness"
                        },
                        new
                        {
                            Id = 5,
                            AreaId = 3,
                            Capacity = 8,
                            Code = "C0005",
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(2483),
                            Description = "A chilly paradise for emperor penguins.",
                            IsDeleted = false,
                            Location = "Antarctic Exhibit",
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(2483),
                            Name = "Penguin Paradise"
                        },
                        new
                        {
                            Id = 6,
                            AreaId = 1,
                            Capacity = 20,
                            Code = "A0006",
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(2485),
                            Description = "A vast exhibit showcasing African wildlife.",
                            IsDeleted = false,
                            Location = "Wide Open Savannah",
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(2485),
                            Name = "African Plains"
                        },
                        new
                        {
                            Id = 7,
                            AreaId = 2,
                            Capacity = 18,
                            Code = "B0007",
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(2487),
                            Description = "A chilly environment for polar animals.",
                            IsDeleted = false,
                            Location = "Arctic Enclosure",
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(2487),
                            Name = "Polar Icecaps"
                        },
                        new
                        {
                            Id = 8,
                            AreaId = 3,
                            Capacity = 12,
                            Code = "C0008",
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(2489),
                            Description = "An arid landscape for Australian fauna.",
                            IsDeleted = false,
                            Location = "Australian Habitat",
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(2489),
                            Name = "Aussie Outback"
                        },
                        new
                        {
                            Id = 9,
                            AreaId = 4,
                            Capacity = 15,
                            Code = "D0009",
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(2491),
                            Description = "A dense forest for Siberian wildlife.",
                            IsDeleted = false,
                            Location = "Russian Wilderness",
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(2491),
                            Name = "Siberian Taiga"
                        },
                        new
                        {
                            Id = 10,
                            AreaId = 5,
                            Capacity = 25,
                            Code = "E0010",
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(2493),
                            Description = "A lush jungle exhibit for Amazon species.",
                            IsDeleted = false,
                            Location = "South American Jungle",
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(2493),
                            Name = "Amazon Rainforest"
                        });
                });

            modelBuilder.Entity("Domain.Entities.CageHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<int>("CageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("CageId");

                    b.ToTable("CageHistories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnimalId = 1,
                            CageId = 1,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5318),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5319),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5312)
                        },
                        new
                        {
                            Id = 2,
                            AnimalId = 2,
                            CageId = 2,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5321),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5321),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5320)
                        },
                        new
                        {
                            Id = 3,
                            AnimalId = 3,
                            CageId = 3,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5322),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5323),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5322)
                        },
                        new
                        {
                            Id = 4,
                            AnimalId = 4,
                            CageId = 4,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5324),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5325),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5324)
                        },
                        new
                        {
                            Id = 5,
                            AnimalId = 5,
                            CageId = 5,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5326),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5327),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5326)
                        },
                        new
                        {
                            Id = 6,
                            AnimalId = 6,
                            CageId = 6,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5328),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5329),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5328)
                        },
                        new
                        {
                            Id = 7,
                            AnimalId = 7,
                            CageId = 7,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5330),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5331),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5330)
                        },
                        new
                        {
                            Id = 8,
                            AnimalId = 8,
                            CageId = 8,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5332),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5332),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5331)
                        },
                        new
                        {
                            Id = 9,
                            AnimalId = 9,
                            CageId = 9,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5334),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5334),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5333)
                        },
                        new
                        {
                            Id = 10,
                            AnimalId = 10,
                            CageId = 10,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5336),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5336),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5335)
                        },
                        new
                        {
                            Id = 11,
                            AnimalId = 11,
                            CageId = 1,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5338),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5338),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5337)
                        },
                        new
                        {
                            Id = 12,
                            AnimalId = 12,
                            CageId = 2,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5340),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5340),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5339)
                        },
                        new
                        {
                            Id = 13,
                            AnimalId = 13,
                            CageId = 3,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5342),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5342),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5341)
                        },
                        new
                        {
                            Id = 14,
                            AnimalId = 14,
                            CageId = 4,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5343),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5344),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5343)
                        },
                        new
                        {
                            Id = 15,
                            AnimalId = 15,
                            CageId = 5,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5345),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5346),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5345)
                        },
                        new
                        {
                            Id = 16,
                            AnimalId = 16,
                            CageId = 6,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5347),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5348),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5347)
                        },
                        new
                        {
                            Id = 17,
                            AnimalId = 17,
                            CageId = 7,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5349),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5350),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5349)
                        },
                        new
                        {
                            Id = 18,
                            AnimalId = 18,
                            CageId = 8,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5351),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5352),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5351)
                        },
                        new
                        {
                            Id = 19,
                            AnimalId = 19,
                            CageId = 9,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5353),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5353),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5353)
                        },
                        new
                        {
                            Id = 20,
                            AnimalId = 20,
                            CageId = 10,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5355),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5355),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(5354)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Diet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DietName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("TimesPerDay")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Diets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7744),
                            DietName = "African Lion - Birth Diet",
                            FoodName = "Milk",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7748),
                            Quantity = 0.5,
                            TimesPerDay = 8,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7750),
                            DietName = "African Lion - Mature Diet",
                            FoodName = "Meat and vegetables",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7750),
                            Quantity = 2.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7752),
                            DietName = "African Lion - Pregnant Diet",
                            FoodName = "Special pregnancy diet",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7752),
                            Quantity = 2.5,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7754),
                            DietName = "Asian Elephant - Birth Diet",
                            FoodName = "Milk and Vegetables",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7754),
                            Quantity = 5.0,
                            TimesPerDay = 4,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7755),
                            DietName = "Asian Elephant - Mature Diet",
                            FoodName = "Grasses, Fruits, Vegetables, and Sugarcane",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7756),
                            Quantity = 150.0,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7757),
                            DietName = "Asian Elephant - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Fruits, Vegetables, and Sugarcane)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7758),
                            Quantity = 150.0,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7759),
                            DietName = "Great White Shark - Birth Diet",
                            FoodName = "Fish and other small sea creatures",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7760),
                            Quantity = 10.0,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7761),
                            DietName = "Great White Shark - Mature Diet",
                            FoodName = "Seals, sea lions, fish, and other sharks",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7762),
                            Quantity = 30.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7763),
                            DietName = "Great White Shark - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Fish and Sea Creatures)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7764),
                            Quantity = 40.0,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 10,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7765),
                            DietName = "European Red Fox - Birth Diet",
                            FoodName = "Milk and Small Creatures",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7765),
                            Quantity = 0.5,
                            TimesPerDay = 4,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 11,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7767),
                            DietName = "European Red Fox - Mature Diet",
                            FoodName = "Small mammals, birds, fruits, and insects",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7767),
                            Quantity = 2.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 12,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7769),
                            DietName = "European Red Fox - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Small Creatures and Fruits)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7769),
                            Quantity = 2.5,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 13,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7771),
                            DietName = "Emperor Penguin - Birth Diet",
                            FoodName = "Milk and Fish",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7771),
                            Quantity = 0.5,
                            TimesPerDay = 8,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 14,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7773),
                            DietName = "Emperor Penguin - Mature Diet",
                            FoodName = "Fish, squid, and krill",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7773),
                            Quantity = 2.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 15,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7775),
                            DietName = "Emperor Penguin - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Fish and Seafood)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7775),
                            Quantity = 2.5,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 16,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7776),
                            DietName = "Kangaroo - Birth Diet",
                            FoodName = "Milk and Grasses",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7777),
                            Quantity = 0.5,
                            TimesPerDay = 8,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 17,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7778),
                            DietName = "Kangaroo - Mature Diet",
                            FoodName = "Grasses and plants",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7779),
                            Quantity = 2.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 18,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7780),
                            DietName = "Kangaroo - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Grasses and Leaves)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7781),
                            Quantity = 2.5,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 19,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7782),
                            DietName = "Grizzly Bear - Birth Diet",
                            FoodName = "Milk and Berries",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7783),
                            Quantity = 2.0,
                            TimesPerDay = 4,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 20,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7784),
                            DietName = "Grizzly Bear - Mature Diet",
                            FoodName = "Fish, berries, roots, and small mammals",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7785),
                            Quantity = 5.0,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 21,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7786),
                            DietName = "Grizzly Bear - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Berries and Small Creatures)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7787),
                            Quantity = 6.0,
                            TimesPerDay = 4,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 22,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7788),
                            DietName = "Polar Bear - Birth Diet",
                            FoodName = "Milk and Fish",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7789),
                            Quantity = 1.0,
                            TimesPerDay = 6,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 23,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7792),
                            DietName = "Polar Bear - Mature Diet",
                            FoodName = "Seals and fish",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7792),
                            Quantity = 4.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 24,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7795),
                            DietName = "Polar Bear - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Fish and Seafood)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7796),
                            Quantity = 5.0,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 25,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7798),
                            DietName = "Bengal Tiger - Birth Diet",
                            FoodName = "Milk and Meat",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7799),
                            Quantity = 0.5,
                            TimesPerDay = 8,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 26,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7802),
                            DietName = "Bengal Tiger - Mature Diet",
                            FoodName = "Deer, wild boar, and other ungulates",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7802),
                            Quantity = 2.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 27,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7805),
                            DietName = "Bengal Tiger - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Meat and Prey)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7806),
                            Quantity = 2.5,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 28,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7808),
                            DietName = "Panda - Birth Diet",
                            FoodName = "Milk and Bamboo",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7809),
                            Quantity = 0.5,
                            TimesPerDay = 8,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 29,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7810),
                            DietName = "Panda - Mature Diet",
                            FoodName = "Bamboo shoots and leaves",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7811),
                            Quantity = 2.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 30,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7812),
                            DietName = "Panda - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Bamboo and Vegetation)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 26, DateTimeKind.Local).AddTicks(7812),
                            Quantity = 2.5,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        });
                });

            modelBuilder.Entity("Domain.Entities.DietDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DietId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("DietId");

                    b.ToTable("DietDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnimalId = 1,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(356),
                            DietId = 1,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(357),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(358)
                        },
                        new
                        {
                            Id = 2,
                            AnimalId = 2,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(359),
                            DietId = 5,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(360),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(361)
                        },
                        new
                        {
                            Id = 3,
                            AnimalId = 3,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(362),
                            DietId = 7,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(363),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(363)
                        },
                        new
                        {
                            Id = 4,
                            AnimalId = 4,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(365),
                            DietId = 10,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(365),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(366)
                        },
                        new
                        {
                            Id = 5,
                            AnimalId = 5,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(367),
                            DietId = 14,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(368),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(368)
                        },
                        new
                        {
                            Id = 6,
                            AnimalId = 6,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(370),
                            DietId = 16,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(370),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(371)
                        },
                        new
                        {
                            Id = 7,
                            AnimalId = 7,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(400),
                            DietId = 20,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(401),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(402)
                        },
                        new
                        {
                            Id = 8,
                            AnimalId = 8,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(404),
                            DietId = 22,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(404),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(405)
                        },
                        new
                        {
                            Id = 9,
                            AnimalId = 9,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(406),
                            DietId = 26,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(407),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(407)
                        },
                        new
                        {
                            Id = 10,
                            AnimalId = 10,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(409),
                            DietId = 28,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(409),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(410)
                        },
                        new
                        {
                            Id = 11,
                            AnimalId = 11,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(411),
                            DietId = 2,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(412),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(412)
                        },
                        new
                        {
                            Id = 12,
                            AnimalId = 12,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(414),
                            DietId = 6,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(414),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(415)
                        },
                        new
                        {
                            Id = 13,
                            AnimalId = 13,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(416),
                            DietId = 8,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(417),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(418)
                        },
                        new
                        {
                            Id = 14,
                            AnimalId = 14,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(419),
                            DietId = 12,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(419),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(420)
                        },
                        new
                        {
                            Id = 15,
                            AnimalId = 15,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(421),
                            DietId = 15,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(422),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(423)
                        },
                        new
                        {
                            Id = 16,
                            AnimalId = 16,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(424),
                            DietId = 18,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(424),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(425)
                        },
                        new
                        {
                            Id = 17,
                            AnimalId = 17,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(426),
                            DietId = 21,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(427),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(428)
                        },
                        new
                        {
                            Id = 18,
                            AnimalId = 18,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(429),
                            DietId = 24,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(429),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(430)
                        },
                        new
                        {
                            Id = 19,
                            AnimalId = 19,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(431),
                            DietId = 27,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(432),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(433)
                        },
                        new
                        {
                            Id = 20,
                            AnimalId = 20,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(434),
                            DietId = 30,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(434),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(435)
                        });
                });

            modelBuilder.Entity("Domain.Entities.FeedHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FeedingDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("TrainerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("TrainerId");

                    b.ToTable("FeedHistories");
                });

            modelBuilder.Entity("Domain.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("Domain.Entities.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Habitat")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LifeSpan")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScientificName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WildDiet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Species");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(6848),
                            Description = "The African lion is a large predatory cat native to Africa.",
                            Habitat = 0,
                            IsDeleted = false,
                            LifeSpan = 10,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(6853),
                            Name = "African Lion",
                            ScientificName = "Panthera leo",
                            WildDiet = "Wild antelopes, zebras, and other herbivores"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(6856),
                            Description = "The Asian elephant is the largest living land animal in Asia.",
                            Habitat = 1,
                            IsDeleted = false,
                            LifeSpan = 60,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(6856),
                            Name = "Asian Elephant",
                            ScientificName = "Elephas maximus",
                            WildDiet = "Grasses, bamboo, fruits, and tree bark"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(6858),
                            Description = "The great white shark is a fearsome predator of the oceans.",
                            Habitat = 2,
                            IsDeleted = false,
                            LifeSpan = 70,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(6858),
                            Name = "Great White Shark",
                            ScientificName = "Carcharodon carcharias",
                            WildDiet = "Seals, sea lions, fish, and other sharks"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(6860),
                            Description = "The European red fox is a cunning and adaptable predator.",
                            Habitat = 3,
                            IsDeleted = false,
                            LifeSpan = 5,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(6860),
                            Name = "European Red Fox",
                            ScientificName = "Vulpes vulpes",
                            WildDiet = "Small mammals, birds, fruits, and insects"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(6862),
                            Description = "The emperor penguin is the largest penguin species and lives in Antarctica.",
                            Habitat = 4,
                            IsDeleted = false,
                            LifeSpan = 20,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(6862),
                            Name = "Emperor Penguin",
                            ScientificName = "Aptenodytes forsteri",
                            WildDiet = "Fish, squid, and krill"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(6864),
                            Description = "Kangaroos are marsupials known for their powerful hind legs and pouches.",
                            Habitat = 5,
                            IsDeleted = false,
                            LifeSpan = 6,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(6864),
                            Name = "Kangaroo",
                            ScientificName = "Macropus",
                            WildDiet = "Grasses and plants"
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(6866),
                            Description = "The grizzly bear is a large and formidable North American mammal.",
                            Habitat = 6,
                            IsDeleted = false,
                            LifeSpan = 20,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(6866),
                            Name = "Grizzly Bear",
                            ScientificName = "Ursus arctos horribilis",
                            WildDiet = "Fish, berries, roots, and small mammals"
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(6868),
                            Description = "The polar bear is a marine mammal adapted to the Arctic environment.",
                            Habitat = 4,
                            IsDeleted = false,
                            LifeSpan = 25,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(6868),
                            Name = "Polar Bear",
                            ScientificName = "Ursus maritimus",
                            WildDiet = "Seals and fish"
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(6870),
                            Description = "The Bengal tiger is a majestic big cat native to the Indian subcontinent.",
                            Habitat = 1,
                            IsDeleted = false,
                            LifeSpan = 15,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(6870),
                            Name = "Bengal Tiger",
                            ScientificName = "Panthera tigris tigris",
                            WildDiet = "Deer, wild boar, and other ungulates"
                        },
                        new
                        {
                            Id = 10,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(6872),
                            Description = "The panda is an iconic bear species known for its bamboo diet.",
                            Habitat = 1,
                            IsDeleted = false,
                            LifeSpan = 20,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 27, DateTimeKind.Local).AddTicks(6872),
                            Name = "Panda",
                            ScientificName = "Ailuropoda melanoleuca",
                            WildDiet = "Bamboo shoots and leaves"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("OrderInformationId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("TicketType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("OrderInformationId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Domain.Entities.TicketOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("TotalMoney")
                        .HasColumnType("float");

                    b.Property<int>("TotalTicket")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("TicketOrders");
                });

            modelBuilder.Entity("Domain.Entities.TrainingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("TrainerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("TrainerId");

                    b.ToTable("TrainingDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnimalId = 1,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6956),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6958),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6950),
                            TrainerId = 1
                        },
                        new
                        {
                            Id = 2,
                            AnimalId = 11,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6959),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6960),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6959),
                            TrainerId = 1
                        },
                        new
                        {
                            Id = 3,
                            AnimalId = 2,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6961),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6962),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6961),
                            TrainerId = 2
                        },
                        new
                        {
                            Id = 4,
                            AnimalId = 12,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6963),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6964),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6963),
                            TrainerId = 2
                        },
                        new
                        {
                            Id = 5,
                            AnimalId = 3,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6965),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6966),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6965),
                            TrainerId = 3
                        },
                        new
                        {
                            Id = 6,
                            AnimalId = 13,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6967),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6968),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6967),
                            TrainerId = 3
                        },
                        new
                        {
                            Id = 7,
                            AnimalId = 4,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6997),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6997),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6996),
                            TrainerId = 4
                        },
                        new
                        {
                            Id = 8,
                            AnimalId = 14,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6999),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6999),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(6998),
                            TrainerId = 4
                        },
                        new
                        {
                            Id = 9,
                            AnimalId = 5,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7001),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7001),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7000),
                            TrainerId = 5
                        },
                        new
                        {
                            Id = 10,
                            AnimalId = 15,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7002),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7003),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7002),
                            TrainerId = 5
                        },
                        new
                        {
                            Id = 11,
                            AnimalId = 6,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7004),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7005),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7004),
                            TrainerId = 1
                        },
                        new
                        {
                            Id = 12,
                            AnimalId = 16,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7006),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7007),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7006),
                            TrainerId = 1
                        },
                        new
                        {
                            Id = 13,
                            AnimalId = 7,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7008),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7009),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7008),
                            TrainerId = 2
                        },
                        new
                        {
                            Id = 14,
                            AnimalId = 17,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7010),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7010),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7010),
                            TrainerId = 2
                        },
                        new
                        {
                            Id = 15,
                            AnimalId = 8,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7012),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7012),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7011),
                            TrainerId = 3
                        },
                        new
                        {
                            Id = 16,
                            AnimalId = 18,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7014),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7014),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7013),
                            TrainerId = 3
                        },
                        new
                        {
                            Id = 17,
                            AnimalId = 9,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7016),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7016),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7015),
                            TrainerId = 4
                        },
                        new
                        {
                            Id = 18,
                            AnimalId = 19,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7018),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7018),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7017),
                            TrainerId = 4
                        },
                        new
                        {
                            Id = 19,
                            AnimalId = 10,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7019),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7020),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7019),
                            TrainerId = 5
                        },
                        new
                        {
                            Id = 20,
                            AnimalId = 20,
                            CreationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7021),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7022),
                            StartDate = new DateTime(2023, 10, 31, 17, 14, 58, 28, DateTimeKind.Local).AddTicks(7021),
                            TrainerId = 5
                        });
                });

            modelBuilder.Entity("Domain.Entities.AnimalInformation", b =>
                {
                    b.HasOne("Domain.Entities.Species", "Species")
                        .WithMany("Animals")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Species");
                });

            modelBuilder.Entity("Domain.Entities.Cage", b =>
                {
                    b.HasOne("Domain.Entities.Area", "Area")
                        .WithMany("Cages")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("Domain.Entities.CageHistory", b =>
                {
                    b.HasOne("Domain.Entities.AnimalInformation", "Animal")
                        .WithMany("CageHistories")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Cage", "Cage")
                        .WithMany("CageHistories")
                        .HasForeignKey("CageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Cage");
                });

            modelBuilder.Entity("Domain.Entities.DietDetail", b =>
                {
                    b.HasOne("Domain.Entities.AnimalInformation", "Animal")
                        .WithMany("DietDetails")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Diet", "Diet")
                        .WithMany("DietDetails")
                        .HasForeignKey("DietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Diet");
                });

            modelBuilder.Entity("Domain.Entities.FeedHistory", b =>
                {
                    b.HasOne("Domain.Entities.AnimalInformation", "Animal")
                        .WithMany("FeedHistories")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Account", "Trainer")
                        .WithMany("FeedHistories")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("Domain.Entities.Ticket", b =>
                {
                    b.HasOne("Domain.Entities.TicketOrder", "OrderInformation")
                        .WithMany("Tickets")
                        .HasForeignKey("OrderInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderInformation");
                });

            modelBuilder.Entity("Domain.Entities.TrainingDetail", b =>
                {
                    b.HasOne("Domain.Entities.AnimalInformation", "Animal")
                        .WithMany("TrainingDetails")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Account", "Trainer")
                        .WithMany("TrainingDetails")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("Domain.Entities.Account", b =>
                {
                    b.Navigation("FeedHistories");

                    b.Navigation("TrainingDetails");
                });

            modelBuilder.Entity("Domain.Entities.AnimalInformation", b =>
                {
                    b.Navigation("CageHistories");

                    b.Navigation("DietDetails");

                    b.Navigation("FeedHistories");

                    b.Navigation("TrainingDetails");
                });

            modelBuilder.Entity("Domain.Entities.Area", b =>
                {
                    b.Navigation("Cages");
                });

            modelBuilder.Entity("Domain.Entities.Cage", b =>
                {
                    b.Navigation("CageHistories");
                });

            modelBuilder.Entity("Domain.Entities.Diet", b =>
                {
                    b.Navigation("DietDetails");
                });

            modelBuilder.Entity("Domain.Entities.Species", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("Domain.Entities.TicketOrder", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
