// <auto-generated />
using System;
using DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DataAccess.Migrations
{
    [DbContext(typeof(AppDBContext))]
    [Migration("20231101080905_Add_Animal_Data")]
    partial class Add_Animal_Data
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.11")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Domain.Entities.Account", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Avatar")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Experiences")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fullname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Role")
                        .HasColumnType("int");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Accounts");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 875, DateTimeKind.Local).AddTicks(2713),
                            Fullname = "Lion Tamer",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 875, DateTimeKind.Local).AddTicks(2726),
                            Password = "DNQkxEhqxl8YdNZv65qcD+AoHZuNwfs/LZm6OQAmnDzq/ARW",
                            Role = 1,
                            Username = "LionTamer"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 880, DateTimeKind.Local).AddTicks(1334),
                            Fullname = "Pachyderm Pro",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 880, DateTimeKind.Local).AddTicks(1346),
                            Password = "ljh9AEpjxyBiuZR3CTRmlOwlI5BLH3HXDUw3hbuzRhMvbQMm",
                            Role = 1,
                            Username = "PachydermPro"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 884, DateTimeKind.Local).AddTicks(4474),
                            Fullname = "Shark Whisperer",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 884, DateTimeKind.Local).AddTicks(4484),
                            Password = "nr+N+ibPMHPe/98QqnYB/g7OcHgppE4ys35IgmHTUs7TF+Qr",
                            Role = 1,
                            Username = "SharkWhisperer"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 888, DateTimeKind.Local).AddTicks(707),
                            Fullname = "Fox Friend",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 888, DateTimeKind.Local).AddTicks(711),
                            Password = "zASbpYm3HLTkgoBqQTMG/qDCBV0+sHTb0sv99jW2E/f+mUda",
                            Role = 1,
                            Username = "FoxFriend"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 892, DateTimeKind.Local).AddTicks(3090),
                            Fullname = "Penguin Pal",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 892, DateTimeKind.Local).AddTicks(3102),
                            Password = "Z7DyPhmZfgBnAndY1ChR4/rHfWIJwGwh1rsBvsDB27JheVtN",
                            Role = 1,
                            Username = "PenguinPal"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 896, DateTimeKind.Local).AddTicks(8747),
                            Fullname = "Nhân viên sở thú",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 896, DateTimeKind.Local).AddTicks(8759),
                            Password = "HZMzAv9Au0Ys4XNbb7gCrWfaKy50bMykyafTmSxk8+LEAvZp",
                            Role = 0,
                            Username = "staff"
                        });
                });

            modelBuilder.Entity("Domain.Entities.AnimalInformation", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime>("BirthDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double?>("Height")
                        .HasColumnType("float");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("SpeciesId")
                        .HasColumnType("int");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double?>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("SpeciesId");

                    b.ToTable("AnimalInformations");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            BirthDate = new DateTime(2018, 4, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(5982),
                            Description = "Majestic African lion named Simba.",
                            Image = "https://i.pinimg.com/564x/db/40/00/db40008ec6c5e2d789834f67359eee44.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(5997),
                            Name = "Simba",
                            SpeciesId = 1,
                            Status = 1,
                            Weight = 180.0
                        },
                        new
                        {
                            Id = 2,
                            BirthDate = new DateTime(2015, 7, 20, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6168),
                            Description = "Gentle Asian elephant named Dumbo.",
                            Height = 10.0,
                            Image = "https://i.pinimg.com/564x/1c/d5/9d/1cd59d96db28e0cbf5e88270bac8fb34.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6169),
                            Name = "Dumbo",
                            SpeciesId = 2,
                            Status = 1,
                            Weight = 4500.0
                        },
                        new
                        {
                            Id = 3,
                            BirthDate = new DateTime(2017, 2, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6188),
                            Description = "Fearsome great white shark named Jaws.",
                            Image = "https://i.pinimg.com/564x/fb/b9/fb/fbb9fb9a5f8f9f2d4244ad7c2bb1b6fe.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6189),
                            Name = "Jaws",
                            SpeciesId = 3,
                            Status = 1,
                            Weight = 2000.0
                        },
                        new
                        {
                            Id = 4,
                            BirthDate = new DateTime(2020, 9, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6198),
                            Description = "Cunning European red fox named Foxy.",
                            Image = "https://i.pinimg.com/564x/9c/ee/58/9cee58f97470496aa9b99ac613125a5c.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6199),
                            Name = "Foxy",
                            SpeciesId = 4,
                            Status = 1,
                            Weight = 10.0
                        },
                        new
                        {
                            Id = 5,
                            BirthDate = new DateTime(2019, 12, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6212),
                            Description = "Regal emperor penguin named Emmy.",
                            Image = "https://i.pinimg.com/564x/ae/3c/24/ae3c24f7dbd9e9ba721a3b76fec1c32b.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6213),
                            Name = "Emmy",
                            SpeciesId = 5,
                            Status = 1,
                            Weight = 35.0
                        },
                        new
                        {
                            Id = 6,
                            BirthDate = new DateTime(2017, 11, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6224),
                            Description = "Energetic kangaroo named Kang.",
                            Image = "https://i.pinimg.com/564x/5a/4c/15/5a4c15238fce3e4e1c5405965c1a7237.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6225),
                            Name = "Kang",
                            SpeciesId = 6,
                            Status = 1,
                            Weight = 70.0
                        },
                        new
                        {
                            Id = 7,
                            BirthDate = new DateTime(2016, 3, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6234),
                            Description = "Majestic grizzly bear named Bear.",
                            Height = 5.0,
                            Image = "https://i.pinimg.com/564x/7a/51/b9/7a51b95ffc4d7cbac381c30cc5fbe077.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6235),
                            Name = "Bear",
                            SpeciesId = 7,
                            Status = 1,
                            Weight = 800.0
                        },
                        new
                        {
                            Id = 8,
                            BirthDate = new DateTime(2015, 12, 18, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6246),
                            Description = "Proud polar bear named Nanook.",
                            Height = 4.5,
                            Image = "https://i.pinimg.com/564x/0c/6c/eb/0c6ceb9b063baff86c11b7e1f696bf04.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6247),
                            Name = "Nanook",
                            SpeciesId = 8,
                            Status = 1,
                            Weight = 900.0
                        },
                        new
                        {
                            Id = 9,
                            BirthDate = new DateTime(2016, 6, 9, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6259),
                            Description = "Fierce Bengal tiger named Raja.",
                            Height = 3.0,
                            Image = "https://i.pinimg.com/564x/52/91/cf/5291cf756d15a62f4b8b717e154ca37e.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6260),
                            Name = "Raja",
                            SpeciesId = 9,
                            Status = 1,
                            Weight = 200.0
                        },
                        new
                        {
                            Id = 10,
                            BirthDate = new DateTime(2017, 8, 30, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6271),
                            Description = "Adorable panda named Pandy.",
                            Height = 2.0,
                            Image = "https://i.pinimg.com/564x/99/bf/a4/99bfa449a463241b88739980663738d0.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6272),
                            Name = "Pandy",
                            SpeciesId = 10,
                            Status = 1,
                            Weight = 150.0
                        },
                        new
                        {
                            Id = 11,
                            BirthDate = new DateTime(2019, 2, 14, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6282),
                            Description = "Graceful African lioness named Zara.",
                            Image = "https://i.pinimg.com/564x/4e/26/37/4e26371ca9dfefc559fff95d041d911b.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6283),
                            Name = "Zara",
                            SpeciesId = 1,
                            Status = 1,
                            Weight = 150.0
                        },
                        new
                        {
                            Id = 12,
                            BirthDate = new DateTime(2016, 10, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6291),
                            Description = "Gentle Asian elephant named Babar.",
                            Height = 9.5,
                            Image = "https://i.pinimg.com/564x/77/f9/6c/77f96c07e4682b864bd8c1815da37aa7.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6292),
                            Name = "Babar",
                            SpeciesId = 2,
                            Status = 1,
                            Weight = 4000.0
                        },
                        new
                        {
                            Id = 13,
                            BirthDate = new DateTime(2018, 7, 28, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6358),
                            Description = "Majestic great white shark named Fins.",
                            Image = "https://i.pinimg.com/564x/bb/81/9e/bb819e828e69a7b74d0efec858df28ff.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6360),
                            Name = "Fins",
                            SpeciesId = 3,
                            Status = 1,
                            Weight = 1800.0
                        },
                        new
                        {
                            Id = 14,
                            BirthDate = new DateTime(2021, 4, 3, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6370),
                            Description = "Clever European red fox named Sly.",
                            Image = "https://i.pinimg.com/564x/a1/af/f6/a1aff62d5b61c8ff2d9fd1128f4ae8c7.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6371),
                            Name = "Sly",
                            SpeciesId = 4,
                            Status = 1,
                            Weight = 12.0
                        },
                        new
                        {
                            Id = 15,
                            BirthDate = new DateTime(2020, 1, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6381),
                            Description = "Charming emperor penguin named Waddle.",
                            Image = "https://i.pinimg.com/564x/5b/a3/b2/5ba3b2ac8ca269f8c111255b03ee2224.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6382),
                            Name = "Waddle",
                            SpeciesId = 5,
                            Status = 1,
                            Weight = 30.0
                        },
                        new
                        {
                            Id = 16,
                            BirthDate = new DateTime(2017, 8, 15, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6393),
                            Description = "Energetic kangaroo named Joey.",
                            Image = "https://i.pinimg.com/736x/cb/86/34/cb8634141686341ac17d6a99b0ec4d5d.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6394),
                            Name = "Joey",
                            SpeciesId = 6,
                            Status = 1,
                            Weight = 75.0
                        },
                        new
                        {
                            Id = 17,
                            BirthDate = new DateTime(2022, 3, 10, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6403),
                            Description = "Playful grizzly bear cub named Bearly.",
                            Height = 2.5,
                            Image = "https://i.pinimg.com/564x/25/10/b7/2510b768ba2867870004f6a05f3a8484.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6404),
                            Name = "Bearly",
                            SpeciesId = 7,
                            Status = 1,
                            Weight = 150.0
                        },
                        new
                        {
                            Id = 18,
                            BirthDate = new DateTime(2020, 12, 1, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6414),
                            Description = "Young polar bear named Snowy.",
                            Height = 3.0,
                            Image = "https://i.pinimg.com/564x/05/b5/41/05b541cd74e53a88bc086a841727cf92.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6415),
                            Name = "Snowy",
                            SpeciesId = 8,
                            Status = 1,
                            Weight = 300.0
                        },
                        new
                        {
                            Id = 19,
                            BirthDate = new DateTime(2022, 6, 25, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6425),
                            Description = "Adventurous Bengal tiger cub named Tyga.",
                            Height = 2.0,
                            Image = "https://i.pinimg.com/564x/ea/b4/67/eab467dd41563c6658fec4a730f78e90.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6426),
                            Name = "Tyga",
                            SpeciesId = 9,
                            Status = 1,
                            Weight = 50.0
                        },
                        new
                        {
                            Id = 20,
                            BirthDate = new DateTime(2019, 9, 5, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6435),
                            Description = "Bamboo-loving panda named Bamboo.",
                            Height = 1.5,
                            Image = "https://i.pinimg.com/564x/86/e0/33/86e03347fd80983cc6a19bfe75d49620.jpg",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 903, DateTimeKind.Local).AddTicks(6436),
                            Name = "Bamboo",
                            SpeciesId = 10,
                            Status = 1,
                            Weight = 120.0
                        });
                });

            modelBuilder.Entity("Domain.Entities.Area", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("Areas");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Capacity = 100,
                            Code = "A",
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(2430),
                            Description = "An exhibit featuring animals from the African savanna",
                            IsDeleted = false,
                            Location = "Savanna Exhibit",
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(2443),
                            Name = "African Savanna"
                        },
                        new
                        {
                            Id = 2,
                            Capacity = 80,
                            Code = "B",
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(2452),
                            Description = "A lush and diverse rainforest habitat",
                            IsDeleted = false,
                            Location = "Rainforest Pavilion",
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(2453),
                            Name = "Rainforest"
                        },
                        new
                        {
                            Id = 3,
                            Capacity = 50,
                            Code = "C",
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(2457),
                            Description = "A cold and watery habitat for penguins",
                            IsDeleted = false,
                            Location = "Aquatic Pavilion",
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(2458),
                            Name = "Penguin Cove"
                        },
                        new
                        {
                            Id = 4,
                            Capacity = 60,
                            Code = "D",
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(2461),
                            Description = "A hot and arid desert environment",
                            IsDeleted = false,
                            Location = "Desert Exhibit",
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(2462),
                            Name = "Desert Oasis"
                        },
                        new
                        {
                            Id = 5,
                            Capacity = 70,
                            Code = "E",
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(2465),
                            Description = "A vibrant coral reef with colorful fish",
                            IsDeleted = false,
                            Location = "Aquatic Pavilion",
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(2466),
                            Name = "Tropical Reef"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Cage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AreaId")
                        .HasColumnType("int");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Location")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("AreaId");

                    b.ToTable("Cages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AreaId = 1,
                            Capacity = 10,
                            Code = "A0001",
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(4899),
                            Description = "A spacious exhibit featuring African animals.",
                            IsDeleted = false,
                            Location = "Savannah Exhibit",
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(4902),
                            Name = "African Safari"
                        },
                        new
                        {
                            Id = 2,
                            AreaId = 1,
                            Capacity = 15,
                            Code = "A0002",
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(4908),
                            Description = "A dedicated area for Asian elephants.",
                            IsDeleted = false,
                            Location = "Asian Elephant Pavilion",
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(4909),
                            Name = "Elephant Sanctuary"
                        },
                        new
                        {
                            Id = 3,
                            AreaId = 2,
                            Capacity = 12,
                            Code = "B0003",
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(4913),
                            Description = "A large tank showcasing great white sharks.",
                            IsDeleted = false,
                            Location = "Marine World",
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(4914),
                            Name = "Shark Tank"
                        },
                        new
                        {
                            Id = 4,
                            AreaId = 2,
                            Capacity = 20,
                            Code = "B0004",
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(4917),
                            Description = "A natural habitat for grizzly bears.",
                            IsDeleted = false,
                            Location = "North American Habitat",
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(4918),
                            Name = "Grizzly Wilderness"
                        },
                        new
                        {
                            Id = 5,
                            AreaId = 3,
                            Capacity = 8,
                            Code = "C0005",
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(4921),
                            Description = "A chilly paradise for emperor penguins.",
                            IsDeleted = false,
                            Location = "Antarctic Exhibit",
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(4922),
                            Name = "Penguin Paradise"
                        },
                        new
                        {
                            Id = 6,
                            AreaId = 1,
                            Capacity = 20,
                            Code = "A0006",
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(4925),
                            Description = "A vast exhibit showcasing African wildlife.",
                            IsDeleted = false,
                            Location = "Wide Open Savannah",
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(4926),
                            Name = "African Plains"
                        },
                        new
                        {
                            Id = 7,
                            AreaId = 2,
                            Capacity = 18,
                            Code = "B0007",
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(4929),
                            Description = "A chilly environment for polar animals.",
                            IsDeleted = false,
                            Location = "Arctic Enclosure",
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(4930),
                            Name = "Polar Icecaps"
                        },
                        new
                        {
                            Id = 8,
                            AreaId = 3,
                            Capacity = 12,
                            Code = "C0008",
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(4933),
                            Description = "An arid landscape for Australian fauna.",
                            IsDeleted = false,
                            Location = "Australian Habitat",
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(4934),
                            Name = "Aussie Outback"
                        },
                        new
                        {
                            Id = 9,
                            AreaId = 4,
                            Capacity = 15,
                            Code = "D0009",
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(4937),
                            Description = "A dense forest for Siberian wildlife.",
                            IsDeleted = false,
                            Location = "Russian Wilderness",
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(4937),
                            Name = "Siberian Taiga"
                        },
                        new
                        {
                            Id = 10,
                            AreaId = 5,
                            Capacity = 25,
                            Code = "E0010",
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(4940),
                            Description = "A lush jungle exhibit for Amazon species.",
                            IsDeleted = false,
                            Location = "South American Jungle",
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(4941),
                            Name = "Amazon Rainforest"
                        });
                });

            modelBuilder.Entity("Domain.Entities.CageHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<int>("CageId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("CageId");

                    b.ToTable("CageHistories");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnimalId = 1,
                            CageId = 1,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9175),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9177),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9171)
                        },
                        new
                        {
                            Id = 2,
                            AnimalId = 2,
                            CageId = 2,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9182),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9183),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9182)
                        },
                        new
                        {
                            Id = 3,
                            AnimalId = 3,
                            CageId = 3,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9186),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9187),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9185)
                        },
                        new
                        {
                            Id = 4,
                            AnimalId = 4,
                            CageId = 4,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9236),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9237),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9234)
                        },
                        new
                        {
                            Id = 5,
                            AnimalId = 5,
                            CageId = 5,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9239),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9240),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9239)
                        },
                        new
                        {
                            Id = 6,
                            AnimalId = 6,
                            CageId = 6,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9243),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9244),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9242)
                        },
                        new
                        {
                            Id = 7,
                            AnimalId = 7,
                            CageId = 7,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9246),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9247),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9245)
                        },
                        new
                        {
                            Id = 8,
                            AnimalId = 8,
                            CageId = 8,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9249),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9250),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9249)
                        },
                        new
                        {
                            Id = 9,
                            AnimalId = 9,
                            CageId = 9,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9252),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9253),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9252)
                        },
                        new
                        {
                            Id = 10,
                            AnimalId = 10,
                            CageId = 10,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9256),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9256),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9255)
                        },
                        new
                        {
                            Id = 11,
                            AnimalId = 11,
                            CageId = 1,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9259),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9260),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9258)
                        },
                        new
                        {
                            Id = 12,
                            AnimalId = 12,
                            CageId = 2,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9262),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9263),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9261)
                        },
                        new
                        {
                            Id = 13,
                            AnimalId = 13,
                            CageId = 3,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9265),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9266),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9265)
                        },
                        new
                        {
                            Id = 14,
                            AnimalId = 14,
                            CageId = 4,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9268),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9269),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9268)
                        },
                        new
                        {
                            Id = 15,
                            AnimalId = 15,
                            CageId = 5,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9272),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9273),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9271)
                        },
                        new
                        {
                            Id = 16,
                            AnimalId = 16,
                            CageId = 6,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9275),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9276),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9274)
                        },
                        new
                        {
                            Id = 17,
                            AnimalId = 17,
                            CageId = 7,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9278),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9279),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9278)
                        },
                        new
                        {
                            Id = 18,
                            AnimalId = 18,
                            CageId = 8,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9281),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9282),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9281)
                        },
                        new
                        {
                            Id = 19,
                            AnimalId = 19,
                            CageId = 9,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9285),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9285),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9284)
                        },
                        new
                        {
                            Id = 20,
                            AnimalId = 20,
                            CageId = 10,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9288),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9289),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 904, DateTimeKind.Local).AddTicks(9287)
                        });
                });

            modelBuilder.Entity("Domain.Entities.Diet", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("DietName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FoodName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<double>("Quantity")
                        .HasColumnType("float");

                    b.Property<int>("TimesPerDay")
                        .HasColumnType("int");

                    b.Property<string>("Unit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Diets");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2674),
                            DietName = "African Lion - Birth Diet",
                            FoodName = "Milk",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2680),
                            Quantity = 0.5,
                            TimesPerDay = 8,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2687),
                            DietName = "African Lion - Mature Diet",
                            FoodName = "Meat and vegetables",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2688),
                            Quantity = 2.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2692),
                            DietName = "African Lion - Pregnant Diet",
                            FoodName = "Special pregnancy diet",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2693),
                            Quantity = 2.5,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2696),
                            DietName = "Asian Elephant - Birth Diet",
                            FoodName = "Milk and Vegetables",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2696),
                            Quantity = 5.0,
                            TimesPerDay = 4,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2700),
                            DietName = "Asian Elephant - Mature Diet",
                            FoodName = "Grasses, Fruits, Vegetables, and Sugarcane",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2700),
                            Quantity = 150.0,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2703),
                            DietName = "Asian Elephant - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Fruits, Vegetables, and Sugarcane)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2704),
                            Quantity = 150.0,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2707),
                            DietName = "Great White Shark - Birth Diet",
                            FoodName = "Fish and other small sea creatures",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2708),
                            Quantity = 10.0,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2711),
                            DietName = "Great White Shark - Mature Diet",
                            FoodName = "Seals, sea lions, fish, and other sharks",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2711),
                            Quantity = 30.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2714),
                            DietName = "Great White Shark - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Fish and Sea Creatures)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2715),
                            Quantity = 40.0,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 10,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2718),
                            DietName = "European Red Fox - Birth Diet",
                            FoodName = "Milk and Small Creatures",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2719),
                            Quantity = 0.5,
                            TimesPerDay = 4,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 11,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2721),
                            DietName = "European Red Fox - Mature Diet",
                            FoodName = "Small mammals, birds, fruits, and insects",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2722),
                            Quantity = 2.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 12,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2725),
                            DietName = "European Red Fox - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Small Creatures and Fruits)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2726),
                            Quantity = 2.5,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 13,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2728),
                            DietName = "Emperor Penguin - Birth Diet",
                            FoodName = "Milk and Fish",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2729),
                            Quantity = 0.5,
                            TimesPerDay = 8,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 14,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2732),
                            DietName = "Emperor Penguin - Mature Diet",
                            FoodName = "Fish, squid, and krill",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2733),
                            Quantity = 2.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 15,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2735),
                            DietName = "Emperor Penguin - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Fish and Seafood)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2736),
                            Quantity = 2.5,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 16,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2739),
                            DietName = "Kangaroo - Birth Diet",
                            FoodName = "Milk and Grasses",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2740),
                            Quantity = 0.5,
                            TimesPerDay = 8,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 17,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2742),
                            DietName = "Kangaroo - Mature Diet",
                            FoodName = "Grasses and plants",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2743),
                            Quantity = 2.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 18,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2746),
                            DietName = "Kangaroo - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Grasses and Leaves)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2747),
                            Quantity = 2.5,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 19,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2749),
                            DietName = "Grizzly Bear - Birth Diet",
                            FoodName = "Milk and Berries",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2750),
                            Quantity = 2.0,
                            TimesPerDay = 4,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 20,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2753),
                            DietName = "Grizzly Bear - Mature Diet",
                            FoodName = "Fish, berries, roots, and small mammals",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2754),
                            Quantity = 5.0,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 21,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2756),
                            DietName = "Grizzly Bear - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Berries and Small Creatures)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2757),
                            Quantity = 6.0,
                            TimesPerDay = 4,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 22,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2760),
                            DietName = "Polar Bear - Birth Diet",
                            FoodName = "Milk and Fish",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2761),
                            Quantity = 1.0,
                            TimesPerDay = 6,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 23,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2763),
                            DietName = "Polar Bear - Mature Diet",
                            FoodName = "Seals and fish",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2764),
                            Quantity = 4.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 24,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2767),
                            DietName = "Polar Bear - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Fish and Seafood)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2767),
                            Quantity = 5.0,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 25,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2770),
                            DietName = "Bengal Tiger - Birth Diet",
                            FoodName = "Milk and Meat",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2771),
                            Quantity = 0.5,
                            TimesPerDay = 8,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 26,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2773),
                            DietName = "Bengal Tiger - Mature Diet",
                            FoodName = "Deer, wild boar, and other ungulates",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2774),
                            Quantity = 2.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 27,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2777),
                            DietName = "Bengal Tiger - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Meat and Prey)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2778),
                            Quantity = 2.5,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 28,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2780),
                            DietName = "Panda - Birth Diet",
                            FoodName = "Milk and Bamboo",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2781),
                            Quantity = 0.5,
                            TimesPerDay = 8,
                            Unit = "liters"
                        },
                        new
                        {
                            Id = 29,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2784),
                            DietName = "Panda - Mature Diet",
                            FoodName = "Bamboo shoots and leaves",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2784),
                            Quantity = 2.0,
                            TimesPerDay = 2,
                            Unit = "kilograms"
                        },
                        new
                        {
                            Id = 30,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2787),
                            DietName = "Panda - Pregnant Diet",
                            FoodName = "Special pregnancy diet (Extra Bamboo and Vegetation)",
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(2788),
                            Quantity = 2.5,
                            TimesPerDay = 3,
                            Unit = "kilograms"
                        });
                });

            modelBuilder.Entity("Domain.Entities.DietDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<int>("DietId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("DietId");

                    b.ToTable("DietDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnimalId = 1,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7674),
                            DietId = 1,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7678),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7686)
                        },
                        new
                        {
                            Id = 2,
                            AnimalId = 2,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7689),
                            DietId = 5,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7690),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7692)
                        },
                        new
                        {
                            Id = 3,
                            AnimalId = 3,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7694),
                            DietId = 7,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7695),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7697)
                        },
                        new
                        {
                            Id = 4,
                            AnimalId = 4,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7699),
                            DietId = 10,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7700),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7701)
                        },
                        new
                        {
                            Id = 5,
                            AnimalId = 5,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7704),
                            DietId = 14,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7705),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7706)
                        },
                        new
                        {
                            Id = 6,
                            AnimalId = 6,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7708),
                            DietId = 16,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7709),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7711)
                        },
                        new
                        {
                            Id = 7,
                            AnimalId = 7,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7713),
                            DietId = 20,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7714),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7715)
                        },
                        new
                        {
                            Id = 8,
                            AnimalId = 8,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7717),
                            DietId = 22,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7718),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7720)
                        },
                        new
                        {
                            Id = 9,
                            AnimalId = 9,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7722),
                            DietId = 26,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7722),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7724)
                        },
                        new
                        {
                            Id = 10,
                            AnimalId = 10,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7726),
                            DietId = 28,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7727),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7728)
                        },
                        new
                        {
                            Id = 11,
                            AnimalId = 11,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7730),
                            DietId = 2,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7731),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7733)
                        },
                        new
                        {
                            Id = 12,
                            AnimalId = 12,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7735),
                            DietId = 6,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7735),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7737)
                        },
                        new
                        {
                            Id = 13,
                            AnimalId = 13,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7739),
                            DietId = 8,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7740),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7741)
                        },
                        new
                        {
                            Id = 14,
                            AnimalId = 14,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7743),
                            DietId = 12,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7744),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7745)
                        },
                        new
                        {
                            Id = 15,
                            AnimalId = 15,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7748),
                            DietId = 15,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7748),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7750)
                        },
                        new
                        {
                            Id = 16,
                            AnimalId = 16,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7752),
                            DietId = 18,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7753),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7754)
                        },
                        new
                        {
                            Id = 17,
                            AnimalId = 17,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7756),
                            DietId = 21,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7757),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7759)
                        },
                        new
                        {
                            Id = 18,
                            AnimalId = 18,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7761),
                            DietId = 24,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7761),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7763)
                        },
                        new
                        {
                            Id = 19,
                            AnimalId = 19,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7765),
                            DietId = 27,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7766),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7767)
                        },
                        new
                        {
                            Id = 20,
                            AnimalId = 20,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7770),
                            DietId = 30,
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7771),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 905, DateTimeKind.Local).AddTicks(7773)
                        });
                });

            modelBuilder.Entity("Domain.Entities.FeedHistory", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("FeedingDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("TrainerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("TrainerId");

                    b.ToTable("FeedHistories");
                });

            modelBuilder.Entity("Domain.Entities.News", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Content")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("Thumbnail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("News");
                });

            modelBuilder.Entity("Domain.Entities.Species", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<DateTime?>("CreationDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Habitat")
                        .HasColumnType("int");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<int>("LifeSpan")
                        .HasColumnType("int");

                    b.Property<DateTime?>("ModificationDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ScientificName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("WildDiet")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Species");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 907, DateTimeKind.Local).AddTicks(2390),
                            Description = "The African lion is a large predatory cat native to Africa.",
                            Habitat = 0,
                            IsDeleted = false,
                            LifeSpan = 10,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 907, DateTimeKind.Local).AddTicks(2404),
                            Name = "African Lion",
                            ScientificName = "Panthera leo",
                            WildDiet = "Wild antelopes, zebras, and other herbivores"
                        },
                        new
                        {
                            Id = 2,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 907, DateTimeKind.Local).AddTicks(2416),
                            Description = "The Asian elephant is the largest living land animal in Asia.",
                            Habitat = 1,
                            IsDeleted = false,
                            LifeSpan = 60,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 907, DateTimeKind.Local).AddTicks(2417),
                            Name = "Asian Elephant",
                            ScientificName = "Elephas maximus",
                            WildDiet = "Grasses, bamboo, fruits, and tree bark"
                        },
                        new
                        {
                            Id = 3,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 907, DateTimeKind.Local).AddTicks(2422),
                            Description = "The great white shark is a fearsome predator of the oceans.",
                            Habitat = 2,
                            IsDeleted = false,
                            LifeSpan = 70,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 907, DateTimeKind.Local).AddTicks(2423),
                            Name = "Great White Shark",
                            ScientificName = "Carcharodon carcharias",
                            WildDiet = "Seals, sea lions, fish, and other sharks"
                        },
                        new
                        {
                            Id = 4,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 907, DateTimeKind.Local).AddTicks(2427),
                            Description = "The European red fox is a cunning and adaptable predator.",
                            Habitat = 3,
                            IsDeleted = false,
                            LifeSpan = 5,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 907, DateTimeKind.Local).AddTicks(2428),
                            Name = "European Red Fox",
                            ScientificName = "Vulpes vulpes",
                            WildDiet = "Small mammals, birds, fruits, and insects"
                        },
                        new
                        {
                            Id = 5,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 907, DateTimeKind.Local).AddTicks(2431),
                            Description = "The emperor penguin is the largest penguin species and lives in Antarctica.",
                            Habitat = 4,
                            IsDeleted = false,
                            LifeSpan = 20,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 907, DateTimeKind.Local).AddTicks(2433),
                            Name = "Emperor Penguin",
                            ScientificName = "Aptenodytes forsteri",
                            WildDiet = "Fish, squid, and krill"
                        },
                        new
                        {
                            Id = 6,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 907, DateTimeKind.Local).AddTicks(2436),
                            Description = "Kangaroos are marsupials known for their powerful hind legs and pouches.",
                            Habitat = 5,
                            IsDeleted = false,
                            LifeSpan = 6,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 907, DateTimeKind.Local).AddTicks(2437),
                            Name = "Kangaroo",
                            ScientificName = "Macropus",
                            WildDiet = "Grasses and plants"
                        },
                        new
                        {
                            Id = 7,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 907, DateTimeKind.Local).AddTicks(2441),
                            Description = "The grizzly bear is a large and formidable North American mammal.",
                            Habitat = 6,
                            IsDeleted = false,
                            LifeSpan = 20,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 907, DateTimeKind.Local).AddTicks(2442),
                            Name = "Grizzly Bear",
                            ScientificName = "Ursus arctos horribilis",
                            WildDiet = "Fish, berries, roots, and small mammals"
                        },
                        new
                        {
                            Id = 8,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 907, DateTimeKind.Local).AddTicks(2446),
                            Description = "The polar bear is a marine mammal adapted to the Arctic environment.",
                            Habitat = 4,
                            IsDeleted = false,
                            LifeSpan = 25,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 907, DateTimeKind.Local).AddTicks(2447),
                            Name = "Polar Bear",
                            ScientificName = "Ursus maritimus",
                            WildDiet = "Seals and fish"
                        },
                        new
                        {
                            Id = 9,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 907, DateTimeKind.Local).AddTicks(2451),
                            Description = "The Bengal tiger is a majestic big cat native to the Indian subcontinent.",
                            Habitat = 1,
                            IsDeleted = false,
                            LifeSpan = 15,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 907, DateTimeKind.Local).AddTicks(2452),
                            Name = "Bengal Tiger",
                            ScientificName = "Panthera tigris tigris",
                            WildDiet = "Deer, wild boar, and other ungulates"
                        },
                        new
                        {
                            Id = 10,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 907, DateTimeKind.Local).AddTicks(2455),
                            Description = "The panda is an iconic bear species known for its bamboo diet.",
                            Habitat = 1,
                            IsDeleted = false,
                            LifeSpan = 20,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 907, DateTimeKind.Local).AddTicks(2456),
                            Name = "Panda",
                            ScientificName = "Ailuropoda melanoleuca",
                            WildDiet = "Bamboo shoots and leaves"
                        });
                });

            modelBuilder.Entity("Domain.Entities.Ticket", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsActive")
                        .HasColumnType("bit");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("OrderInformationId")
                        .HasColumnType("int");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<int>("TicketType")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.HasIndex("OrderInformationId");

                    b.ToTable("Tickets");
                });

            modelBuilder.Entity("Domain.Entities.TicketOrder", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.None);

                    b.Property<Guid>("Code")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier")
                        .HasDefaultValueSql("newid()");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("EffectiveDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("PaymentMethod")
                        .HasColumnType("int");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Status")
                        .HasColumnType("int");

                    b.Property<double>("TotalMoney")
                        .HasColumnType("float");

                    b.Property<int>("TotalTicket")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("Code")
                        .IsUnique();

                    b.ToTable("TicketOrders");
                });

            modelBuilder.Entity("Domain.Entities.TrainingDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("AnimalId")
                        .HasColumnType("int");

                    b.Property<DateTime?>("CreationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime?>("DeletionDate")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bit")
                        .HasDefaultValue(false);

                    b.Property<DateTime?>("ModificationDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<DateTime>("StartDate")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("datetime2")
                        .HasDefaultValueSql("getutcdate()");

                    b.Property<int>("TrainerId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("AnimalId");

                    b.HasIndex("TrainerId");

                    b.ToTable("TrainingDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            AnimalId = 1,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3285),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3288),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3272),
                            TrainerId = 1
                        },
                        new
                        {
                            Id = 2,
                            AnimalId = 11,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3295),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3296),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3294),
                            TrainerId = 1
                        },
                        new
                        {
                            Id = 3,
                            AnimalId = 2,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3300),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3301),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3299),
                            TrainerId = 2
                        },
                        new
                        {
                            Id = 4,
                            AnimalId = 12,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3304),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3305),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3303),
                            TrainerId = 2
                        },
                        new
                        {
                            Id = 5,
                            AnimalId = 3,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3308),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3309),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3307),
                            TrainerId = 3
                        },
                        new
                        {
                            Id = 6,
                            AnimalId = 13,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3311),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3312),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3311),
                            TrainerId = 3
                        },
                        new
                        {
                            Id = 7,
                            AnimalId = 4,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3315),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3316),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3314),
                            TrainerId = 4
                        },
                        new
                        {
                            Id = 8,
                            AnimalId = 14,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3319),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3320),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3318),
                            TrainerId = 4
                        },
                        new
                        {
                            Id = 9,
                            AnimalId = 5,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3323),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3324),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3322),
                            TrainerId = 5
                        },
                        new
                        {
                            Id = 10,
                            AnimalId = 15,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3327),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3328),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3326),
                            TrainerId = 5
                        },
                        new
                        {
                            Id = 11,
                            AnimalId = 6,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3330),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3331),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3329),
                            TrainerId = 1
                        },
                        new
                        {
                            Id = 12,
                            AnimalId = 16,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3334),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3335),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3333),
                            TrainerId = 1
                        },
                        new
                        {
                            Id = 13,
                            AnimalId = 7,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3338),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3339),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3337),
                            TrainerId = 2
                        },
                        new
                        {
                            Id = 14,
                            AnimalId = 17,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3341),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3342),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3341),
                            TrainerId = 2
                        },
                        new
                        {
                            Id = 15,
                            AnimalId = 8,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3345),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3346),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3344),
                            TrainerId = 3
                        },
                        new
                        {
                            Id = 16,
                            AnimalId = 18,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3349),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3350),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3348),
                            TrainerId = 3
                        },
                        new
                        {
                            Id = 17,
                            AnimalId = 9,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3410),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3411),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3409),
                            TrainerId = 4
                        },
                        new
                        {
                            Id = 18,
                            AnimalId = 19,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3414),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3415),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3414),
                            TrainerId = 4
                        },
                        new
                        {
                            Id = 19,
                            AnimalId = 10,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3419),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3420),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3418),
                            TrainerId = 5
                        },
                        new
                        {
                            Id = 20,
                            AnimalId = 20,
                            CreationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3422),
                            IsDeleted = false,
                            ModificationDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3423),
                            StartDate = new DateTime(2023, 11, 1, 15, 9, 4, 909, DateTimeKind.Local).AddTicks(3422),
                            TrainerId = 5
                        });
                });

            modelBuilder.Entity("Domain.Entities.AnimalInformation", b =>
                {
                    b.HasOne("Domain.Entities.Species", "Species")
                        .WithMany("Animals")
                        .HasForeignKey("SpeciesId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Species");
                });

            modelBuilder.Entity("Domain.Entities.Cage", b =>
                {
                    b.HasOne("Domain.Entities.Area", "Area")
                        .WithMany("Cages")
                        .HasForeignKey("AreaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Area");
                });

            modelBuilder.Entity("Domain.Entities.CageHistory", b =>
                {
                    b.HasOne("Domain.Entities.AnimalInformation", "Animal")
                        .WithMany("CageHistories")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Cage", "Cage")
                        .WithMany("CageHistories")
                        .HasForeignKey("CageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Cage");
                });

            modelBuilder.Entity("Domain.Entities.DietDetail", b =>
                {
                    b.HasOne("Domain.Entities.AnimalInformation", "Animal")
                        .WithMany("DietDetails")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Diet", "Diet")
                        .WithMany("DietDetails")
                        .HasForeignKey("DietId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Diet");
                });

            modelBuilder.Entity("Domain.Entities.FeedHistory", b =>
                {
                    b.HasOne("Domain.Entities.AnimalInformation", "Animal")
                        .WithMany("FeedHistories")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Account", "Trainer")
                        .WithMany("FeedHistories")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("Domain.Entities.Ticket", b =>
                {
                    b.HasOne("Domain.Entities.TicketOrder", "OrderInformation")
                        .WithMany("Tickets")
                        .HasForeignKey("OrderInformationId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("OrderInformation");
                });

            modelBuilder.Entity("Domain.Entities.TrainingDetail", b =>
                {
                    b.HasOne("Domain.Entities.AnimalInformation", "Animal")
                        .WithMany("TrainingDetails")
                        .HasForeignKey("AnimalId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Domain.Entities.Account", "Trainer")
                        .WithMany("TrainingDetails")
                        .HasForeignKey("TrainerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Animal");

                    b.Navigation("Trainer");
                });

            modelBuilder.Entity("Domain.Entities.Account", b =>
                {
                    b.Navigation("FeedHistories");

                    b.Navigation("TrainingDetails");
                });

            modelBuilder.Entity("Domain.Entities.AnimalInformation", b =>
                {
                    b.Navigation("CageHistories");

                    b.Navigation("DietDetails");

                    b.Navigation("FeedHistories");

                    b.Navigation("TrainingDetails");
                });

            modelBuilder.Entity("Domain.Entities.Area", b =>
                {
                    b.Navigation("Cages");
                });

            modelBuilder.Entity("Domain.Entities.Cage", b =>
                {
                    b.Navigation("CageHistories");
                });

            modelBuilder.Entity("Domain.Entities.Diet", b =>
                {
                    b.Navigation("DietDetails");
                });

            modelBuilder.Entity("Domain.Entities.Species", b =>
                {
                    b.Navigation("Animals");
                });

            modelBuilder.Entity("Domain.Entities.TicketOrder", b =>
                {
                    b.Navigation("Tickets");
                });
#pragma warning restore 612, 618
        }
    }
}
